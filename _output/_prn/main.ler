
                                                              Page :          1
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

      1 //*********************************************************************
        ********
      2 //
      3 // USDC TEMPLATE FIRMWARE for Q111 MCU  
      4 //
      5 // Program:	 LAPIS MCU Development Board Demo Code 
      6 //
      7 // Purpose:	 Demonstration Code for use with LAPIS MCU Development Boar
        d 
      8 //
      9 // This single Example code Demonstrates all the following modules work
        ing: 
     10 //		 1.) MCU Initialization (OSC; PORTS; PERIPHERIALS; WDT; etc.) 
     11 //		 2.) Demo of 2Hz INTERRUPT on TBC
     12 //		 3.) Demo of Timer-overflow INTERRUPTS on TMR 8/9
     13 //		 4.) Demo of Timer-overflow INTERRUPTS on TMR A/B
     14 //		 5.) Demo of Timer-overflow INTERRUPTS on TMR E/F
     15 //		 6.) Demo of Hardware PWM Control 
     16 //		 7.) UART TX Demo 
     17 //		 8.) UART RX Demo
     18 //		 9.) ADC Demo...
     19 //		10.) IsC Master Demo...    
     20 //
     21 // Authors:	 C. Schell, K. Bahar & F. Lee 
     22 //		 	 ROHM Semiconductor USA, LLC
     23 //		 	 US Design Center
     24 //
     25 // Notes: 	
     26 //		1.) RTLU8 RUNTIME LIBRARIES:
     27 //				RTLU8 is a C runtime library for mcu's that use the LAPIS nX-U8 a
        s the CPU core
     28 //				RTLU8 provides a large number of routines that can be used when p
        rogramming 
     29 //				in C. Much effort and time can be saved by using these library ro
        utines.
     30 //				For Example, to use the sprintf library for UART commands, you ne
        ed to add 
     31 //				the "LU8100SW.lib" RT Library. To do this open the LAPIS IDE & se
        lect:
     32 //				'Project -> Options -> Target' from the menu bar.  In the "Genera
        l" Tab, 
     33 //				type in "LU8100SW.lib" to add the RTLU8 runtime library for small
         memory 
     34 //				model containing sprintf and many other routines
     35 //		2.) CHECKING THE PROGRAM SIZE:
     36 //				You can check the program size from the map file generated during

                                                              Page :          2
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

         "Compile" step by the Linker. 
     37 //				Please refer to CCU8 programming guide: (3.1. Map Files and 3.1.4
        . Program and Data size)
     38 //				Results will look something like this:
     39 //					Program and Data Sizes
     40 //					This portion of the map file gives aggregate program and data si
        zes for each segment type.
     41 //						Total size (CODE  ) = 02CE4   (11492)
     42 //						Total size (DATA  ) = 002E7   (743)
     43 //						Total size (BIT   ) = 00000.0 (0.0)
     44 //						Total size (NVDATA) = 00000   (0)
     45 //						Total size (NVBIT ) = 00000.0 (0.0)
     46 //						Total size (TABLE ) = 0828A   (33418)
     47 //
     48 // Started:  April 6th, 2013
     49 // Updated:	 JULY 17th, 2014
     50 //*********************************************************************
        ********
     51 
     52 // ================================ ML610Q111 =========================
        ======== 
     53 //	ML610Q111 MCU PINOUT - TSSOP20 Package
     54 //
     55 // 		Pin 01 of mcu => PC0 / TM9OUT / PWMF0 
     56 // 		Pin 02 of mcu => RESET_N
     57 // 		Pin 03 of mcu => TEST
     58 // 		Pin 04 of mcu => PB0 / CMP1OUT / OUTCLK / PWMC / RXD0 / AIN2 / EXI
        4
     59 // 		Pin 05 of mcu => PB1 / TXD1 / TXD0 / PWMD / AIN3 / EXI5 
     60 // 		Pin 06 of mcu => PB2 / PWME / RXD1 / EXI6 
     61 // 		Pin 07 of mcu => PB3 / TXD1 / SIN / EXI7 
     62 // 		Pin 08 of mcu => PA2 / CMP0OUT / CLKIN / PWME / EXI2 
     63 // 		Pin 09 of mcu => TESTF
     64 // 		Pin 10 of mcu => PC3 / TMFOUT
     65 
     66 // 		Pin 11 of mcu => PC2 / PWMF2 
     67 // 		Pin 12 of mcu => PA1 / EXI1 / AIN1 / CMP1P / PWMD / LSCLK / TMFOUT
        
     68 // 		Pin 13 of mcu => PB4 / CMP0P / SOUT / TXD0 / TXD1
     69 // 		Pin 14 of mcu => PB5 / CMP0M / RXD0 / SCK / SCL / PWMF2
     70 // 		Pin 15 of mcu => PB6 / AIN4 / CLKIN / SDA / PWMF1
     71 // 		Pin 16 of mcu => VSS
     72 // 		Pin 17 of mcu => VDD
     73 // 		Pin 18 of mcu => PB7 / AIN5 / RXD1 / LSCLK / PWMF0 / PWMC
     74 // 		Pin 19 of mcu => PA0 / EXI0 / AIN0 / PWMC / OUTCLK / TM9OUT
     75 // 		Pin 20 of mcu => PC1 / PWMF1

                                                              Page :          3
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

     76 //
     77 //=====================================================================
        ========
     78 
     79 //*********************************************************************
        ********
     80 // Microcontroller's connections on the LAPIS MCU Development Board to 
        the 
     81 //  Plug 'n Play, Raspberry Pi Compatible, Universal Connectors:
     82 //
     83 // Pin-01 => 3.3V Power					Pin-02 => 5.0V Power (VBUS)
     84 // Pin-03 => I2C-SDA  (Q111 I/O B.6)	Pin-04 => no connection
     85 // Pin-05 => I2C-SCL  (Q111 I/O B.5)*	Pin-06 => GROUND
     86 // Pin-07 => no connection*				Pin-08 => UART-TX  (Q111 I/O B.1)
     87 // Pin-09 => no connection				Pin-10 => UART-RX  (Q111 I/O B.0) 
     88 // Pin-11 => GPIO #17 (Q111 I/O A.0)	Pin-12 => GPIO #18 (Q111 I/O B.7)
     89 // Pin-13 => GPIO #21 (Q111 I/O A.1)	Pin-14 => no connection
     90 // Pin-15 => GPIO #22 (Q111 I/O A.2)	Pin-16 => GPIO #23 (Q111 I/O C.2)
     91 // Pin-17 => no connection				Pin-18 => GPIO #24 (Q111 I/O C.3)
     92 // Pin-19 => SPI-MOSI (Q111 I/O B.4)	Pin-20 => no connection
     93 // Pin-21 => SPI-MISO (Q111 I/O B.3)	Pin-22 => GPIO #25 (Q111 I/O B.2)
     94 // Pin-23 => SPI-SCLK (Q111 I/O B.5)*	Pin-24 => SPI-CS0  (Q111 I/O C.0)
        
     95 // Pin-25 => no connection				Pin-26 => SPI-CS1  (Q111 I/O C.1)
     96 // 
     97 //=====================================================================
        ========
     98 //*********************************************************************
        ********
     99 
    100 //*********************************************************************
        ********
    101 // Q111 Microcontroller's I/O Pins at J3 on the LAPIS MCU Development B
        oard 
    102 //
    103 // Pin-01 => A.0				Pin-02 => A.1
    104 // Pin-03 => A.2				Pin-04 => B.0
    105 // Pin-05 => B.1				Pin-06 => B.2
    106 // Pin-07 => B.3				Pin-08 => B.4
    107 // Pin-09 => B.5				Pin-10 => B.6 
    108 // Pin-11 => B.7				Pin-12 => C.0
    109 // Pin-13 => C.1				Pin-14 => C.2
    110 // Pin-15 => C.3				Pin-16 => GROUND
    111 //
    112 //=====================================================================
        ========

                                                              Page :          4
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    113 //*********************************************************************
        ********
    114 
    115 
    116 //***** PREPROCESSOR DIRECTIVES ***************************************
        ********
    117  // INCLUDED FILES...
    118 	#include	<ML610111.H>	// Lapis Micro ML610Q111 on LAPIS MCU Developmen
        t Board
    119 	#include	<stdlib.h>		// General-purpose utilities
    120 	#include	<stdio.h>		// I/O-related processing
    121 	#include 	<common.h>		// Common Definitions
    122 	#include 	<irq.h>			// IRQ Definitions
    123 	#include 	<mcu.h>			// MCU Definition
    124 	#include	<i2c.h>			// I2C Definition
    125 	#include 	<tbc.h>			// Set TBC (Timer Based Clock) API
    126 	#include 	<timer.h>		// Timer Macros & APIs
    127 	#include	<math.h>		// Mathematical functions
    128 	#include 	<uart.h>		// UART Function Prototypes	
    129 	//#include	<float.h>		// Numerical limits for floating-point numbers	
    130 	//#include	<string.h>		// Character string manipulation routines
    131 	//#include	<yvals.h>		// Called for by most Header Files
    132 
    133 	//#include 	<main.h>		// Clear WDT API
    134 	//#include	<ctype.h>		// Character classification and conversion 
    135 	//#include	<errno.h>		// Error identifiers Library
    136 	//#include	<limits.h>		// Numerical limits for integers
    137 	//#include	<muldivu8.h>	// Multiplication and Division accelerator
    138 	//#include	<setjmp.h>		// Global jump (allow jumps to locations outsid
        e the current function) 
    139 	//#include	<signal.h>		// Signal handling functions
    140 	//#include	<stdarg.h>		// Variable numbers of arguments
    141 	//#include	<stddef.h>		// Standard types and macros 
    142 	//#include	<yfuns.h>		//  
    143 	
    144 //*********************************************************************
        ********
    145  // I/O PIN DATA ALIASES...
    146 // Connections for Q111 Universal Socket
    147 	#define RX 			PB0D 
    148 	#define TX 			PB1D
    149  
    150 	#define I2C_SDA 	PB6D 
    151 	#define I2C_SCL 	PB5D 
    152 
    153 	#define GPIO_17		PA0D

                                                              Page :          5
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    154 	#define GPIO_21		PA1D
    155 	#define GPIO_22		PA2D
    156 	#define GPIO_18		PB7D
    157 	#define GPIO_23		PC2D
    158 	#define GPIO_24		PC3D
    159 	#define GPIO_25		PB2D
    160 
    161 	#define SPI_MOSI	PB4D
    162 	#define SPI_MISO	PB3D
    163 	#define SPI_SCL 	PB5D
    164 	#define SPI_CS0		PC0D
    165 	#define SPI_CS1 	PC1D 	
    166 	
    167 		// ====== DICE ======
    168 	//
    169 	//	1	2	3
    170 	//
    171 	//	4	5	6
    172 	//
    173 	//	7	8	9
    174 	//
    175 	// ==================
    176 
    177 	#define LED1_pin		PC1D	//2013-04-18 (LaPi Plug 'n Play Board)
    178 	#define LED2_pin		PC3D	//2013-04-18 (LaPi Plug 'n Play Board)
    179 	//#define LED3_pin		PB0D	//2013-04-18 (LaPi Plug 'n Play Board)
    180 	#define LED4_pin		PC0D	//2013-04-18 (LaPi Plug 'n Play Board)
    181 	#define LED5_pin		PC2D	//2013-04-18 (LaPi Plug 'n Play Board)
    182 	#define LED6_pin		PB5D	//2013-04-18 (LaPi Plug 'n Play Board)
    183 	#define LED7_pin		PB2D	//2013-04-18 (LaPi Plug 'n Play Board)
    184 	#define LED8_pin		PB7D	//2013-04-18 (LaPi Plug 'n Play Board)
    185 	#define LED9_pin		PB6D	//2013-04-18 (LaPi Plug 'n Play Board)
    186 	
    187 	// ===== Commands for Parallax Serial LCD Display =====
    188 	#define LCD_Display_OFF			(  21U )
    189 	#define LCD_Display_ON_NoBlink	(  22U )
    190 	#define LCD_Display_ON 			(  25U )
    191 	#define LCD_Backlight_ON 		(  17U )
    192 	#define LCD_Backlight_OFF 		(  18U )
    193 	#define LCD_HOME 				( 128U )
    194 	#define LCD_Line2				( 148U )
    195 	
    196 	// ===== Serial Strings =====
    197 	#define WelcomeString		( "LAPIS Q111 LaPi DEV. DEMO") 
    198 	#define WelcomeString_LEN	( sizeof(WelcomeString) - 1 )
    199 

                                                              Page :          6
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    200 	#define ClearLCD			( "                                ") 
    201 	#define ClearLCD_LEN		( sizeof(ClearLCD) - 1 )
    202 
    203 	#define DataHeaderString	( "My Sensor Data = \n\r")
    204 	#define DataHeaderString_LEN	( sizeof(DataHeaderString) - 1  )
    205 
    206 	#define AlarmString			( "MOTION DETECTED BY PIR SENSOR!  \n\r" ) 
    207 	#define AlarmString_LEN		( sizeof(AlarmString) - 1 )
    208 
    209 	#define NoAlarmString		( "PIR: NO MOTION  - ALL IS WELL!  \n\r" ) 
    210 	#define NoAlarmString_LEN	( sizeof(NoAlarmString) - 1 )
    211 
    212 	#define MagFieldString		( "MAGNETIC Field  DETECTED BY HALL\n\r" ) 
    213 	#define MagFieldString_LEN	( sizeof(MagFieldString) - 1 )
    214 
    215 	#define NoMagFieldString	( "HALL:NO MAGNETIC Field Detected!\n\r" ) 
    216 	#define NoMagFieldString_LEN	( sizeof(MagFieldString) - 1 )
    217 
    218 	#define OkayString			( "OKAY!\n\r") 
    219 	#define OkayString_LEN		( sizeof(OkayString) - 1 )
    220 
    221 	#define TestString			( "TESTING!") 
    222 	#define TestString_LEN		( sizeof(TestString) - 1 )
    223 
    224 	#define NewLineString		( "\n\r") 
    225 	#define NewLineString_LEN	( sizeof(NewLineString) - 1 )
    226 
    227 	#define FailureString		( "FAILURE!") 
    228 	#define FailureString_LEN	( sizeof(FailureString) - 1 )
    229 
    230 	#define SuccessString		( "SUCCESS!") 
    231 	#define SuccessString_LEN	( sizeof(SuccessString) - 1 )
    232 
    233 	#define PartSuccessString		( "PARTIALLY SUCCESSFUL!") 
    234 	#define PartSuccessString_LEN	( sizeof(PartSuccessString) - 1 )
    235 	
    236 
    237 //*********************************************************************
        ********
    238 //=====================================================================
        ======
    239 //   MACROS: 
    240 //=====================================================================
        ======
    241 
    242 // ===== Peripheral setting.=====

                                                              Page :          7
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    243 	#define HSCLK_KHZ	( 8192u )	// 8MHz = 8000kHz (will be multiplied by 1
        024 to give 8,192,000Hz)
    244 	#define FLG_SET	    ( 0x01u ) 	
    245 
    246 // ===== SET DESIRED UART SETTINGS HERE! (Options in UART.h) ==========
        ======
    247 #define UART_BAUDRATE		( UART_BR_9600BPS) 	// Data Bits Per Second - Te
        sted at rates from 2400bps to 512000bps!
    248 #define UART_DATA_LENGTH	( UART_LG_8BIT )		// x-Bit Data
    249 #define UART_PARITY_BIT		( UART_PT_NON )			// Parity
    250 #define UART_STOP_BIT		( UART_STP_1BIT )		// x Stop-Bits
    251 #define UART_LOGIC			( UART_NEG_POS )		// Desired Logic
    252 #define UART_DIRECTION		( UART_DIR_LSB )		// LSB or MSB First 
    253 
    254 		// ===== UART Settings =====
    255 		//STRUCTURE:
    256 			static const tUartSetParam  _uartSetParam = {		// UART Parameters
    257 				UART_BAUDRATE,						// Members of Structure...
    258 				UART_DATA_LENGTH,					// Members of Structure...
    259 				UART_PARITY_BIT,					// Members of Structure...
    260 				UART_STOP_BIT,						// Members of Structure...
    261 				UART_LOGIC,							// Members of Structure...
    262 				UART_DIRECTION						// Members of Structure...
    263 			};
    264 //=====================================================================
        ======
    265 
    266 
    267 
    268 //*********************************************************************
        ********
    269 //=====================================================================
        ======
    270 //   STRUCTURES: 
    271 //=====================================================================
        ======
    272 	//Example Structure Declaration
    273 	typedef struct {
    274 		unsigned char state     : 1;
    275 		unsigned char state_sub : 2;
    276 		unsigned char reserve   : 5;
    277 	} STRUCT_STATE;	 
    278 
    279 
    280 //*********************************************************************
        ********

                                                              Page :          8
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    281 
    282 
    283 //*********************************************************************
        ********
    284 //=====================================================================
        ======
    285 //   FUNCTION PROTOTYPES: 
    286 //	Establishes the name and return type of a function and may specify t
        he 
    287 // 	types, formal parameter names and number of arguments to the functi
        on                                 
    288 //=====================================================================
        ======
    289 	void main_clrWDT( void );				// no return value and no arguments
    290 	void Initialization( void );			// no return value and no arguments
    291 	void SetOSC( void );					// no return value and no arguments
    292 
    293 	static void NOPms(unsigned int ms);		// no return value - Delay in ms 
        as Argument
    294 	void NOPx( unsigned int MyCount );		// no return value - Count in ms a
        s Argument
    295 	void PWM_B0_ON(int myPeriod, int myDutyCycle);		// no return value - P
        eriod & DutyCycle Variables as Arguments
    296 
    297 	void analog_comparator( void );			
    298 	void PortA_Low( void );					// no return value and no arguments
    299 	void PortB_Low( void );					// no return value and no arguments
    300 	void PortC_Low( void );					// no return value and no arguments
    301 	void PortA_Digital_Inputs( void );		// no return value and no argument
        s
    302 	void PinB0_PWM( void ); 				// no return value and no arguments
    303 	void main_reqNotHalt( void );			// no return value and no arguments
    304 
    305 	static void _initPeri( void );
    306 	static void _intWdt( void );
    307 	static void _intTimer( void );
    308 
    309 	void _funcUartFin( unsigned int size, unsigned char errStat );
    310 	void _intUart( void );
    311 
    312 	void _funcI2CFin( unsigned int size, unsigned char errStat );
    313 	void checkI2C( void );
    314 	void _intI2c( void );
    315 
    316 	void _intADC( void );
    317 	

                                                              Page :          9
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    318 	void TBC_ISR( void );			// TBC Interrupt Service Routine...
    319 	void TMR89_ISR( void );			// TIMER 8/9 Interrupt Service Routine...
    320 	void TMRAB_ISR( void );			// TIMER A/B Interrupt Service Routine...
    321 	void TMREF_ISR( void );			// TIMER E/F Interrupt Service Routine...
    322 	void ExtInt_ISR( void );		// External Interrupt Interrupt Service Rout
        ine...
    323 	
    324 	void SerialLCD_Init_and_Clear (void);	// no return value and no argume
        nts 
    325 
    326 	void UART_TX_TEST (void);				// no return value and no arguments
    327 	void UART_RX_TEST (void);				// no return value and no arguments
    328 
    329 	
    330 
    331 
    332 //*********************************************************************
        ********
    333 //GLOBALS...
    334 
    335 	//UART, I2C & ADC Variables
    336 	unsigned char	_flgUartFin;
    337 	unsigned char 	_flgI2CFin;
    338 	unsigned char	_flgADCFin;
    339 	unsigned char	_reqNotHalt;
    340 	
    341 
    342 /*######################################50#############################
        #########*/
    343 /*#                                  APIs                              
              #*/
    344 /*#####################################################################
        #######*/
    345 //*********************************************************************
        ********
    346 //=====================================================================
        ======
    347 //  	Start of MAIN FUNCTION
    348 //=====================================================================
        ======
    349 int main(void) 
    350 {
    351 	//LOCAL VARIABLES
    352 	char char_a;				// -128 to 127
    353 	unsigned char uchar;		// 0-255
    354 	unsigned int uint, delay;	// 0 to 65,535

                                                              Page :         10
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    355 	long long_a;				// -2,147,483,648 to 2,147,483,647
    356 	float float_a;				// 1.17549435e-38 to 3.40282347e+38
    357 	double double_a;			// 2.2250738585072014e-308 to 1.7976931348623157e+3
        08 
    358 	int i,j,k,x,y;				// -32,768 to 32767
    359 
    360 	Init:
    361 		Initialization();		// Init Micro...(Ports, Timers, OSC, IRQ's, UART, 
        etc...)
    362 		
    363 		SerialLCD_Init_and_Clear();		// Set up Parallax Serial LCD Display...
        
    364 
    365 		UART_TX_TEST();					// Test UART TX...
    366 
    367 		//SerialLCD_Init_and_Clear(); 	//Clear Display in prep for ECHO
    368 			
    369 	Rx_Test_Loop:
    370 		
    371 		UART_RX_TEST();
    372 	
    373 	goto Rx_Test_Loop;
    374 
    375 	Primary_Loop:		
    376 		//PLACE USER CODE HERE...
    377 		//PWM_B0_ON(4000, 125);	//period, Duty Cycle variables
    378 
    379 		LED5_pin ^= 1;
    380 		
    381 		main_clrWDT();
    382 
    383 	goto Primary_Loop;
    384 		
    385 
    386 }//end main
    387 
    388 //=====================================================================
        ======
    389 //  	End of MAIN FUNCTION
    390 //=====================================================================
        ======
    391 //*********************************************************************
        ********
    392 
    393 
    394 

                                                              Page :         11
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    395 
    396 //*********************************************************************
        ********
    397 //=====================================================================
        ======
    398 //  	Start of Other Functions...
    399 //=====================================================================
        ======
    400 //*********************************************************************
        ********
    401 
    402 
    403 /**********************************************************************
        *********
    404 	Routine Name:	main_clrWDT
    405 	Form:			void main_clrWDT( void )
    406 	Parameters:		void
    407 	Return value:	void
    408 	Description:	clear WDT.
    409 ***********************************************************************
        *******/
    410 
    411 void main_clrWDT( void )
***** main\main.c(386) : Warning : W5029 : 'y': unreferenced local variable
***** main\main.c(386) : Warning : W5029 : 'x': unreferenced local variable
***** main\main.c(386) : Warning : W5029 : 'k': unreferenced local variable
***** main\main.c(386) : Warning : W5029 : 'j': unreferenced local variable
***** main\main.c(386) : Warning : W5029 : 'i': unreferenced local variable
***** main\main.c(386) : Warning : W5029 : 'double_a': unreferenced local varia
        ble
***** main\main.c(386) : Warning : W5029 : 'float_a': unreferenced local variab
        le
***** main\main.c(386) : Warning : W5029 : 'long_a': unreferenced local variabl
        e
***** main\main.c(386) : Warning : W5029 : 'delay': unreferenced local variable
***** main\main.c(386) : Warning : W5029 : 'uint': unreferenced local variable
***** main\main.c(386) : Warning : W5029 : 'uchar': unreferenced local variable
***** main\main.c(386) : Warning : W5029 : 'char_a': unreferenced local variabl
        e
***** main\main.c(386) : Warning : W6002 : 'Init': unreferenced label
    412 {
    413 	//__DI(); // Disable multi-interrupts
    414 		do {
    415 			WDTCON = 0x5Au;
    416 		} while (WDP != 1);
    417 		WDTCON = 0xA5u;

                                                              Page :         12
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    418 
    419 	//__EI(); // Re-Enable multi-interrupts
    420 }
    421 
    422 //=====================================================================
        ======
    423 //	Initialize Micro to Desired State...
    424 //=====================================================================
        ======
    425 static void Initialization(void){
    426 
    427 	//Initialize Peripherals	
    428 		//BLKCON2 Control Bits...Manually Set 4/12/2013
    429 			DSIO0 = 1; // 0=> Enables Synchronous Serial Port 0 
    430 			DUA0  = 0; // 0=> Enables the operation of UART0 
    431 			DUA1  = 1; // 0=> Enables Uart1 
    432 			DI2C1 = 1; // 0=> Enables I2C bus Interface (Slave) 
    433 			DI2C0 = 0; // 0=> Enables I2C bus Interface (Master)	
    434 	
    435 		BLKCON4 = 0x00; // SA-ADC: 0=> Enables ; 0xFF=> Disables
    436 		BLKCON6 = 0x00; // Timers 8, 9, A, E, F : 0=> Enables ; 0xFF=> Disabl
        es
    437 		BLKCON7 = 0x00; // PWM (PWMC, PWMD, PWME, PWMF : 0=> Enables ; 0xFF=>
         Disables
    438 
    439 	// Port Initialize...
    440 		PortA_Low();	//Initialize all 3 Ports of Q111 Port A to GPIO-Low
    441 		PortB_Low();	//Initialize all 8 Ports of Q111 Port B to GPIO-Low
    442 		PortC_Low();	//Initialize all 4 Ports of Q111 Port C to GPIO-Low
    443 
    444 	// UART INIT...	
    445 		//uart_0_Init();
    446 				
    447 				
    448 	// ===== Set Oscillator Rate =====
    449      	SetOSC(); 	//8MHz
    450 
    451 	// ===== PWM =========================================================
        =======
    452 	//
    453 	//	NOTE: Possible conflict of B.0 with RX pin from UART0
    454 	//	
    455 	//	PinB0_PWM();		// Set up PWM peripheral (Pin on B.0)
    456 	//====================================================================
        =======	
    457 		

                                                              Page :         13
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    458 	// ===== Comparator =====	
    459 		//analog_comparator();	//Set up anaolg comparator peripheral
    460 
    461 
    462 /* 	// ===== SET SPECIFIC DESIRED PINS AS INPUTS =====
    463 		//Setup PIR Sensor Input on B.4
    464 			//Step 1: Set Pin Direction...
    465 				PB4DIR = 1;			// PortB Bit4 set Direction to INPUT...
    466 			//Step 2: Set Pin I/O Type...
    467 				PB4C1  = 0;			// PortB Bit4 set Type to HIGH-IMPEDANCE INPUT...
    468 				PB4C0  = 0;	
    469 			//Step 3: Set Pin Purpose...
    470 				PB4MD1  = 0;		// PortB Bit4 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    471 				PB4MD0  = 0;
    472 
    473 		//Setup HALL Sensor Input on B.3
    474 			//Step 1: Set Pin Direction...
    475 				PB3DIR = 1;			// PortB Bit3 set Direction to INPUT...
    476 			//Step 2: Set Pin I/O Type...
    477 				PB3C1  = 0;			// PortB Bit3 set Type to HIGH-IMPEDANCE INPUT...
    478 				PB3C0  = 0;	
    479 			//Step 3: Set Pin Purpose...
    480 				PB3MD1  = 0;		// PortB Bit3 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    481 				PB3MD0  = 0;
    482 
    483 		//Setup ACCELEROMETER X-SIGNAL Sensor Input on A.2
    484 			//Step 1: Set Pin Direction...
    485 				PA2DIR = 1;			// PortA Bit2 set Direction to INPUT...
    486 			//Step 2: Set Pin I/O Type...
    487 				PA2C1  = 0;			// PortA Bit2 set Type to HIGH-IMPEDANCE INPUT...
    488 				PA2C0  = 0;	
    489 			//Step 3: Set Pin Purpose...
    490 				PA2MD1  = 0;		// PortA Bit2 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    491 				PA2MD0  = 0;
    492 		
    493 		//Setup ACCELEROMETER Y-SIGNAL Sensor Input on A.1
    494 			//Step 1: Set Pin Direction...
    495 				PA1DIR = 1;			// PortA Bit1 set Direction to INPUT...
    496 			//Step 2: Set Pin I/O Type...
    497 				PA1C1  = 0;			// PortA Bit1 set Type to HIGH-IMPEDANCE INPUT...
    498 				PA1C0  = 0;	
    499 			//Step 3: Set Pin Purpose...
    500 				PA1MD1  = 0;		// PortA Bit1 set Purpose to GENERAL PURPOSE Input/Ou

                                                              Page :         14
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        tput...
    501 				PA1MD0  = 0;
    502 
    503 		//Setup ACCELEROMETER Temperature-SIGNAL Sensor Input on A.0
    504 			//Step 1: Set Pin Direction...
    505 				PA0DIR = 1;			// PortA Bit0 set Direction to INPUT...
    506 			//Step 2: Set Pin I/O Type...
    507 				PA0C1  = 0;			// PortA Bit0 set Type to HIGH-IMPEDANCE INPUT...
    508 				PA0C0  = 0;	
    509 			//Step 3: Set Pin Purpose...
    510 				PA0MD1  = 0;		// PortA Bit0 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    511 				PA0MD0  = 0; */
    512 
    513 	//================== STANDBY CONTROL REGISTER=========================
        ==========
    514 	//
    515 	// SBYCON is a 2-bit special function register to control operating mo
        de of MCU
    516 	//		STP   :   HLT
    517 	// 		BIT 1 :  BIT 0
    518 	//  	 0         0     => Program RUN mode (initial value)
    519 	//  	 0         1     => HALT mode
    520 	//  	 1         0     => STOP mode
    521 	//  	 1         1     => (Prohibited)
    522 	// See ML610Q111/ML610Q112 User Manual - Section 4: MCU Control Functi
        on
    523 	//	SBYCON = 0;		// Program RUN mode
    524 	//====================================================================
        ==========
    525 
    526 	//================== VOLTAGE LEVEL SUPERVISOR REGISTER ===============
        ==========
    527 	// 
    528 	// The Q11x mcu's have two channels of VOLTAGE LEVEL SUPERVISORs
    529 	// Accuracy is ±3%
    530 	//
    531 	// The threshold voltages of VLS0 (VDD fall) : 2.85V (Typ. )
    532 	//								  (VDD rise) : 2.92V (Typ. )
    533 	//
    534 	// The threshold voltages of VLS1 (VDD fall) : 4 types selectable 3.3V
        / 3.6V/ 3.9V/ 4.2V (Typ.)
    535 	// The VLS0 can be used as the low voltage level detector reset.
    536 	// 
    537 	// See ML610Q111/ML610Q112 User Manual - Section 22: Voltage Level Sup
        ervisor

                                                              Page :         15
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    538 	//
    539 	//====================================================================
        ==========
    540 
    541    	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
    542 	// INTERRUPT SETUP...
    543 		//	The ML610Q1xx mcu's have 31 hardware interrupt sources 
    544 		//		 7 External Interrupt Sources
    545 		//		24 Internal Interrupt Sources 
    546 		// EXAMPLE: WDT; VLS; EXTERNAL INT Pins (6); SPI; ADC; I2C (Slave); I
        2C (Master);
    547 		//			TIMERS (6); UART; Comparators (2); PWM's ((4); TBC (4)		
    548 	
    549 		irq_di();	// Disable Interrupts
    550 		//irq_init();	// Initialize Interrupts (All Off and NO Requests)
    551 			//==================================================================
        ==
    552 			//FOR NOTES ONLY...This is all taken care of in "irq_init()"
    553 				// INTERRUPT ENABLE REGISTERS...
    554 				//  IE0 = VOLTAGE LEVEL SUPERVISOR Int.
    555 				//  IE1 = EXTERNAL Ints on B3, B2, B1, B0, A2, A1, & A0
    556 				//  IE2 = SPI, A/D, I2C Slave & I2C Master Int.
    557 				//  IE3 = TIMERS 8 & 9 Ints.
    558 				//  IE4 = UART & COMPARATOR Ints.
    559 				//  IE5 = TIMERS A, B, E & F Ints.
    560 				//  IE6 = PWMC, PWMD, PWME, PWMF & 128Hz & 32Hz TBC Ints.
    561 				//  IE7 = 16Hz & 2Hz TBC Ints.
    562 				//IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    563 				//--------------------------------------------------------------
    564 				// INTERRUPT REQUEST FLAG REGISTERS...
    565 				//  IRQ0 = WDT & VLS Int Requests
    566 				//  IRQ1 = EXTERNAL Int Requests
    567 				//  IRQ2 = SPI, A/D, I2C Slave & I2C Master Int Requests
    568 				//  IRQ3 = TIMERS 8 & 9 Int Requests 
    569 				//  IRQ4 = UART & COMPARATOR Int Requests 
    570 				//  IRQ5 = TIMERS A, B, E & F Int Requests 
    571 				//  IRQ6 = PWMC &  128Hz & 32Hz TBC Int Requests 
    572 				//  IRQ7 = 16Hz & 2Hz TBC Int Requests 
    573 				//IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    574 			//==================================================================
        ==
    575 
    576 			// INTERRUPT ENABLE REGISTERS...
    577 				IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    578 
    579 

                                                              Page :         16
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    580 			// INTERRUPT REQUEST REGISTERS...
    581 				IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    582 
    583  			//------------- SET UP UART Interrupts Handler --------------------
        -----------------------
    584 				(void)irq_setHdr( (unsigned char)IRQ_NO_UA0INT, _intUart );
    585 					EUA0 = 1; 	// EUA0 is the enable flag for the UART0 interrupt (1=E
        NABLED)
***** main\main.c(584) : Warning : W5027 : Meaningless use of an expression
    586 					QUA0 = 0;	// Request Flag for the UART_0 	INTERRUPT (1=REQUEST, 0-
        NO-REQUEST)
    587 			//------------------------------------------------------------------
        ----------------------
    588 			
    589  			//------------- SET UP I2C MASTER Interrupts Handler --------------
        -----------------------
    590 				(void)irq_setHdr( (unsigned char)IRQ_NO_I2CMINT, _intI2c );
    591 					EI2CM = 1; // EI2CM is the enable flag for the I2C MASTER interrup
        t (1=ENABLED)
***** main\main.c(590) : Warning : W5027 : Meaningless use of an expression
    592 					QI2CM = 0;
    593 			//------------------------------------------------------------------
        ----------------------
    594 			
    595 			//------------- SET UP ADC Interrupts Handler ----------------------
        ----------------------
    596 				(void)irq_setHdr( (unsigned char)IRQ_NO_SADINT, _intADC );
    597 					ESAD = 1; // ESAD is the enable flag for the ADC interrupt (1=ENAB
        LED)
***** main\main.c(596) : Warning : W5027 : Meaningless use of an expression
    598 					QSAD = 0; // Request Flag for the ADC INTERRUPT (1=REQUEST, 0-NO-R
        EQUEST)
    599 			//------------------------------------------------------------------
        ----------------------
    600 			
    601 			//------------- SET UP  xHz TBC Interrupt (Options: 128Hz, 32Hz, 16H
        z, 2Hz) --------------
    602 				(void)irq_setHdr( (unsigned char)IRQ_NO_T2HINT, TBC_ISR );  //Clear
         interrupt request flag
    603 					E2H = 1;	  // Enable x Hz TBC Interrupt (1=ENABLED)
***** main\main.c(602) : Warning : W5027 : Meaningless use of an expression
    604 					Q2H = 0;	  // Request flag for the TIME BASE COUNTER 2Hz Interrupt
        
    605 			// -----			
    606 			//------------- TBC...Set Ratio: : 1:1 => 1_1 ----------------------
        ----------------------

                                                              Page :         17
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    607 				(void)tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of
         dividing frequency of the time base counter
    608 			//------------------------------------------------------------------
        ---------------------- 
    609 			
    610  			//------------- SET UP TIMER 8/9 Interrupt to increment timers ever
        y ~X ms ---------------
    611 				(void)irq_setHdr( (unsigned char)IRQ_NO_TM9INT, TMR89_ISR );  //Cle
        ar interrupt request flag
***** main\main.c(607) : Warning : W5027 : Meaningless use of an expression
    612 					ETM8 = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
***** main\main.c(611) : Warning : W5027 : Meaningless use of an expression
    613 					ETM9 = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)
    614 					QTM8 = 0;		// Timer 8 IRQ request flag; 1=REQUEST
    615 					QTM9 = 0;		// Timer 9 IRQ request flag; 1=REQUEST
    616 					T8CS0 = 1;		// 111 => Select PLLCLK
    617 					T8CS1 = 1;
    618 					T8CS2 = 1;
    619 					T9CS0 = 1;		// 111 => Select PLLCLK
    620 					T9CS1 = 1;
    621 					T9CS2 = 1; 
    622 					tm_init(TM_CH_NO_89);
    623 					tm_set89Data(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    624 					tm_set89Source(TM_CS_HTBCLK);
    625 					tm_start89();
    626 					T89M16 = 1;		//1 => sets 16-bit timer mode
    627 				
    628 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    629 					HTD2 = 1;
    630 					HTD1 = 1;
    631 					HTD0 = 1; 
    632 			//------------------------------------------------------------------
        ----------------------
    633 
    634 			
    635  			//------------- SET UP TIMER A/B Interrupt to increment timers ever
        y ~X ms ---------------
    636 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMBINT, TMRAB_ISR );  //Cle
        ar interrupt request flag
    637 					ETMA = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
***** main\main.c(636) : Warning : W5027 : Meaningless use of an expression
    638 					ETMB = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)
    639 					QTMA = 0;		// timer 8 IRQ request flag; 1=REQUEST
    640 					QTMB = 0;		// timer 9 IRQ request flag; 1=REQUEST

                                                              Page :         18
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    641 					TACS0 = 1;		// 111 => Select PLLCLK
    642 					TACS1 = 1;
    643 					TACS2 = 1;
    644 					TBCS0 = 1;		// 111 => Select PLLCLK
    645 					TBCS1 = 1;
    646 					TBCS2 = 1; 
    647 					tm_init(TM_CH_NO_AB);
    648 					tm_setABData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    649 					tm_setABSource(TM_CS_HTBCLK);
    650 					tm_startAB();
    651 					TABM16 = 1;		//1 => sets 16-bit timer mode
    652 				
    653 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    654 					HTD2 = 1;
    655 					HTD1 = 1;
    656 					HTD0 = 1; 
    657 			//------------------------------------------------------------------
        ----------------------
    658 
    659 			
    660 			//------------- SET UP TIMER E/F Interrupt to increment timers every
         ~X ms ---------------
    661 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMFINT, TMREF_ISR );  //Cle
        ar interrupt request flag
    662 					ETME = 1;	  	// Enable timer E Interrupt (1=ENABLED
***** main\main.c(661) : Warning : W5027 : Meaningless use of an expression
    663 					ETMF = 1;	  	// Enable timer F Interrupt (1=ENABLED)
    664 					QTME = 0;		// Timer E IRQ request flag; 1=REQUEST
    665 					QTMF = 0;		// Timer F IRQ request flag; 1=REQUEST
    666 					TECS0 = 1;		// 111 => Select PLLCLK
    667 					TECS1 = 1;
    668 					TECS2 = 1;
    669 					TFCS0 = 1;		// 111 => Select PLLCLK
    670 					TFCS1 = 1;
    671 					TFCS2 = 1;
    672 					tm_init(TM_CH_NO_EF);
    673 					tm_setEFData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    674 					tm_setEFSource(TM_CS_HTBCLK);
    675 					tm_startEF();
    676 					TEFM16 = 1;		//1 => sets 16-bit timer mode
    677 				
    678 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz

                                                              Page :         19
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    679 					HTD2 = 1;
    680 					HTD1 = 1;
    681 					HTD0 = 1; 
    682 			//------------------------------------------------------------------
        ----------------------
    683 			
    684 			//------------- SET UP B.3 as an input, and prepare to use as an ext
        ernal interrupt ------
    685 					PB3DIR = 1;
    686 					PB3C1 = 0;
    687 					PB3C0 = 0;
    688 					PB3MD1 = 0;
    689 					PB3MD0 = 0;
    690 					PB3E1 = 1;
    691 					PB3E0 = 0;		//PBnE0-1 are used to choose the Rising-Edge Mode for 
        this interrupt
    692 					PB3SM = 0;
    693 			// -----
    694 			//------------- SET UP EXTERNAL INTERRUPT on B.3 -------------------
        ----------------------
    695 			//Options include following pins: A.0; A.1; A.2. B.0; B.1; B.2 & B.3
        
    696 			(void)irq_setHdr( (unsigned char)IRQ_NO_PB3INT, ExtInt_ISR );  //Cle
        ar interrupt request flag
    697 					EPB3 = 0;	// 1=> Enables Interrupt
***** main\main.c(696) : Warning : W5027 : Meaningless use of an expression
    698 					QPB3 = 0;	// EXT IRQ request flag; 1=REQUEST	
    699 			//------------------------------------------------------------------
        ----------------------   
    700 	
    701 			
    702 	irq_ei(); // Enable Interrupts
    703 	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII  
    704 
    705 	// ===== SET UP WATCH DOG TIMER ======================================
        =======
    706 		WDTMOD = 0x03; 	// 0x03=overflow 8sec...
    707 		main_clrWDT(); 	// Clear WDT   
    708 	//====================================================================
        =======
    709 	
    710 	
    711 	// ===== UART Initialization =========================================
        =======
    712 	//
    713 	//	Pin PB0 of mcu => RX  

                                                              Page :         20
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    714 	// 	Pin PB1 of mcu => TX 
    715 	// 
    716 		(void)uart_init( (unsigned char)UART_CS_HSCLK,	// Generator       			
        	
    717 				 (unsigned short)HSCLK_KHZ,				// HSCLK frequency 				
    718 				 &_uartSetParam );						// Parameters from Structure    
    719 		uart_PortSet();									// Set UART Port Pins
***** main\main.c(718) : Warning : W5027 : Meaningless use of an expression
    720 		_flgUartFin = 0;
    721 		uart_stop();
    722 
    723 	//	
    724 	//====================================================================
        =======
    725 
    726 	// ===== I2C Initialization ==========================================
        =======
    727 	//	(void)i2c_init(I2C_MOD_FST, (unsigned short)HSCLK_KHZ, I2C_SYN_ON);
        
    728 	//	I20SYN = 1;		//Enable Clock Stretching	
    729 	//====================================================================
        =======
    730 
    731 
    732 
    733 		
    734 		
    735 }//End Initialization
    736 //=====================================================================
        ======
    737 
    738 
    739 //=====================================================================
        ======
    740 //	OSC set
    741 //=====================================================================
        ======
    742 static void SetOSC(void){
    743 
    744 	//Frequency Control Register 0 (FCON0) 	
    745 	//	used to control the high-speed clock generation circuit and to sele
        ct system clock.
    746 		SYSC0  = 0;			// Used to select the frequency of the HSCLK => 00=8.19
        2MHz.
    747 		SYSC1  = 0;			//...
    748 		OSCM1  = 1;			// 10 => Built-in PLL oscillation mode

                                                              Page :         21
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    749 		OSCM0  = 0;			//...
    750 		
    751 	// Frequency Control Register 1 (FCON1)
    752 		ENOSC  = 1;			// 1=Enable High Speed Oscillator...
    753 		SYSCLK = 1;			// Select System Clock: 1=HSCLK; 0=LSCLK 
    754 		LPLL   = 1;			// 1=Enables the use of PLL oscillation - ADDED 4/30/20
        13
    755 
    756 	__EI();					//INT enable
    757 }
    758 //=====================================================================
        ======
    759 
    760 
    761 //=====================================================================
        ======
    762 //	Analog Comparator setup
    763 //=====================================================================
        ======
    764 void analog_comparator(void){
    765 
    766 //Carl's Notes...
    767 
    768 //Step 1: Select the Interrupt Mode
    769 // 	a.) Interrupt Disabled      => CMPxE1 = 0; CMPxE0 = 0;	  
    770 // 	b.) Falling-Edge Int. Mode  => CMPxE1 = 0; CMPxE0 = 1;
    771 // 	c.) Rising-Edge Int. Mode   => CMPxE1 = 1; CMPxE0 = 0;
    772 // 	d.) Both-Edge Int. Mode     => CMPxE1 = 1; CMPxE0 = 1;
    773 
    774 
    775 //Step 2: Enable the Comparator                       => CMPxEN = 1;	
    776 
    777 //Step 3: Wait 3ms to allow Comparator to stabilize
    778 
    779 //Step 4: Read the comparison result			=> CMPxD: 0= +<-; 1= +>-
    780 
    781 //Step 5: Disable the Comparator				=> CMPxEN = 0;	
    782 
    783 
    784 
    785    //Comparator 0...
    786 	CMP0EN  = 0x01; 	// Comparator ON...
    787 	CMP0E1  = 0x00; 	// No Interupt...
    788 	CMP0E0  = 0x00;
    789 	CMP0SM1 = 0x00; 	// Detect without Sampling... 
    790 	CMP0RFS = 0x01; 	// Differential Input on B5

                                                              Page :         22
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    791 
    792    //Comparator 0 OFF
    793 	CMP0EN  = 0x00;
    794 
    795 
    796 }
    797 //=====================================================================
        ======
    798 
    799 
    800 
    801 //=====================================================================
        ======
    802 //	Clear All 3 Bits of Port A
    803 //=====================================================================
        ======
    804 void PortA_Low(void){
    805 
    806 //Carl's Notes...
    807 
    808 //Step 1: Set Pin Direction...
    809 //Step 2: Set Pin I/O Type...
    810 //Step 3: Set Pin Purpose...
    811 //Step 4: Set Pin Data...
    812 
    813 	//Direction...	
    814 	PA0DIR = 0;		// PortA Bit0 set to Output Mode...
    815 	PA1DIR = 0;		// PortA Bit1 set to Output Mode...
    816 	PA2DIR = 0;		// PortA Bit2 set to Output Mode...
    817 
    818 	//I/O Type...
    819 	PA0C1  = 1;		// PortA Bit0 set to CMOS Output...
    820 	PA0C0  = 1;		
    821 	PA1C1  = 1;		// PortA Bit1 set to CMOS Output...
    822 	PA1C0  = 1;	
    823 	PA2C1  = 1;		// PortA Bit2 set to CMOS Output...
    824 	PA2C0  = 1;	
    825 
    826 	//Purpose...
    827 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose Output...
    828 	PA0MD0  = 0;	
    829 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose Output...
    830 	PA1MD0  = 0;	
    831 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose Output...
    832 	PA2MD0  = 0;	
    833 

                                                              Page :         23
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    834 	//Data...
    835 	PA0D = 0;		// A.0 Output OFF....
    836 	PA1D = 0;		// A.1 Output OFF....
    837 	PA2D = 0;		// A.2 Output OFF....
    838 
    839 	main_clrWDT(); 	// Clear WDT
    840 
    841 }
    842 //=====================================================================
        ======
    843 
    844 //=====================================================================
        ======
    845 //	Clear All 8 Bits of Port B
    846 //=====================================================================
        ======
    847 void PortB_Low(void){
    848 
    849 //Carl's Notes...
    850 
    851 //Step 1: Set Pin Direction...
    852 //Step 2: Set Pin I/O Type...
    853 //Step 3: Set Pin Purpose...
    854 //Step 4: Set Pin Data...
    855 
    856 	//Direction...	
    857 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
    858 	PB1DIR = 0;		// PortB Bit1 set to Output Mode...
    859 	PB2DIR = 0;		// PortB Bit2 set to Output Mode...
    860 	PB3DIR = 0;		// PortB Bit3 set to Output Mode...
    861 	PB4DIR = 0;		// PortB Bit4 set to Output Mode...
    862 	PB5DIR = 0;		// PortB Bit5 set to Output Mode...
    863 	PB6DIR = 0;		// PortB Bit6 set to Output Mode...
    864 	PB7DIR = 0;		// PortB Bit7 set to Output Mode...
    865 
    866 	//I/O Type...
    867 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
    868 	PB0C0  = 1;		
    869 	PB1C1  = 1;		// PortB Bit1 set to CMOS Output...
    870 	PB1C0  = 1;	
    871 	PB2C1  = 1;		// PortB Bit2 set to CMOS Output...
    872 	PB2C0  = 1;	
    873 	PB3C1  = 1;		// PortB Bit3 set to CMOS Output...
    874 	PB3C0  = 1;		
    875 	PB4C1  = 1;		// PortB Bit4 set to CMOS Output...
    876 	PB4C0  = 1;	

                                                              Page :         24
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    877 	PB5C1  = 1;		// PortB Bit5 set to CMOS Output...
    878 	PB5C0  = 1;	
    879 	PB6C1  = 1;		// PortB Bit6 set to CMOS Output...
    880 	PB6C0  = 1;	
    881 	PB7C1  = 1;		// PortB Bit7 set to CMOS Output...
    882 	PB7C0  = 1;	
    883 
    884 	//Purpose...
    885 	PB0MD1  = 0;	// PortB Bit0 set to General Purpose Output...
    886 	PB0MD0  = 0;	
    887 	PB1MD1  = 0;	// PortB Bit1 set to General Purpose Output...
    888 	PB1MD0  = 0;	
    889 	PB2MD1  = 0;	// PortB Bit2 set to General Purpose Output...
    890 	PB2MD0  = 0;	
    891 	PB3MD1  = 0;	// PortB Bit3 set to General Purpose Output...
    892 	PB3MD0  = 0;	
    893 	PB4MD1  = 0;	// PortB Bit4 set to General Purpose Output...
    894 	PB4MD0  = 0;	
    895 	PB5MD1  = 0;	// PortB Bit5 set to General Purpose Output...
    896 	PB5MD0  = 0;
    897 	PB6MD1  = 0;	// PortB Bit6 set to General Purpose Output...
    898 	PB6MD0  = 0;	
    899 	PB7MD1  = 0;	// PortB Bit7 set to General Purpose Output...
    900 	PB7MD0  = 0;
    901 
    902 	//Data...
    903 	PB0D = 0;		// B.0 Output OFF....
    904 	PB1D = 0;		// B.1 Output OFF....
    905 	PB2D = 0;		// B.2 Output OFF....
    906 	PB3D = 0;		// B.3 Output OFF....
    907 	PB4D = 0;		// B.4 Output OFF....
    908 	PB5D = 0;		// B.5 Output OFF....
    909 	PB6D = 0;		// B.6 Output OFF....
    910 	PB7D = 0;		// B.7 Output OFF....
    911 
    912 	main_clrWDT(); 	// Clear WDT
    913 
    914 }
    915 //=====================================================================
        ======
    916 
    917 //=====================================================================
        ======
    918 //	Clear All 4 Bits of Port C
    919 //=====================================================================
        ======

                                                              Page :         25
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    920 void PortC_Low(void){
    921 
    922 //Carl's Notes...
    923 
    924 //Step 1: Set Pin Direction...
    925 //Step 2: Set Pin I/O Type...
    926 //Step 3: Set Pin Purpose...
    927 //Step 4: Set Pin Data...
    928 
    929 	//Direction...	
    930 	PC0DIR = 0;		// PortC Bit0 set to Output Mode...
    931 	PC1DIR = 0;		// PortC Bit1 set to Output Mode...
    932 	PC2DIR = 0;		// PortC Bit2 set to Output Mode...
    933 	PC3DIR = 0;		// PortC Bit3 set to Output Mode...
    934 
    935 
    936 	//I/O Type...
    937 	PC0C1  = 1;		// PortC Bit0 set to CMOS Output...
    938 	PC0C0  = 1;		
    939 	PC1C1  = 1;		// PortC Bit1 set to CMOS Output...
    940 	PC1C0  = 1;	
    941 	PC2C1  = 1;		// PortC Bit2 set to CMOS Output...
    942 	PC2C0  = 1;	
    943 	PC3C1  = 1;		// PortC Bit3 set to CMOS Output...
    944 	PC3C0  = 1;		
    945 
    946 	//Purpose...
    947 	PC0MD1  = 0;	// PortC Bit0 set to General Purpose Output...
    948 	PC0MD0  = 0;	
    949 	PC1MD1  = 0;	// PortC Bit1 set to General Purpose Output...
    950 	PC1MD0  = 0;	
    951 	PC2MD1  = 0;	// PortC Bit2 set to General Purpose Output...
    952 	PC2MD0  = 0;	
    953 	PC3MD1  = 0;	// PortC Bit3 set to General Purpose Output...
    954 	PC3MD0  = 0;	
    955 
    956 	//Data...
    957 	PC0D = 0;		// C.0 Output OFF....
    958 	PC1D = 0;		// C.1 Output OFF....
    959 	PC2D = 0;		// C.2 Output OFF....
    960 	PC3D = 0;		// C.3 Output OFF....
    961 
    962 	main_clrWDT(); 	// Clear WDT
    963 
    964 }
    965 //=====================================================================

                                                              Page :         26
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        ======
    966 
    967 //=====================================================================
        ======
    968 //	Set All 3 Bits of Port A as Digital Input Pins
    969 //=====================================================================
        ======
    970 void PortA_Digital_Inputs(void){
    971 
    972 //Carl's Notes...
    973 
    974 //Step 1: Set Pin Direction...
    975 //Step 2: Set Pin I/O Type...
    976 //Step 3: Set Pin Purpose...
    977 //Step 4: Set Pin Data...
    978 
    979 	//Direction...	
    980 	PA0DIR = 1;		// PortA Bit0 set to Input Mode...
    981 	PA1DIR = 1;		// PortA Bit1 set to Input Mode...
    982 	PA2DIR = 1;		// PortA Bit2 set to Input Mode...
    983 
    984 
    985 	//I/O Type...
    986 	PA0C1  = 1;		// PortA Bit0 set to Input with Pull-Up Resistor...
    987 	PA0C0  = 0;		
    988 	PA1C1  = 1;		// PortA Bit1 set to Input with Pull-Up Resistor...
    989 	PA1C0  = 0;	
    990 	PA2C1  = 1;		// PortA Bit2 set to Input with Pull-Up Resistor...
    991 	PA2C0  = 0;	
    992 
    993 	//Purpose...
    994 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose I/O...
    995 	PA0MD0  = 0;	
    996 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose I/O...
    997 	PA1MD0  = 0;	
    998 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose I/O...
    999 	PA2MD0  = 0;	
   1000 
   1001 	main_clrWDT(); 	// Clear WDT
   1002 
   1003 }
   1004 //=====================================================================
        ======
   1005 
   1006 //=====================================================================
        ======

                                                              Page :         27
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1007 //	PWM Output on Port B - Pin 0
   1008 //=====================================================================
        ======
   1009 void PWM_B0_ON(int myPeriod, int myDutyCycle){
   1010 
   1011 		
   1012 		//SET THE PERIOD...
   1013 			PWCP = myPeriod;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 2
        00=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
   1014 
   1015 		//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
   1016 		//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
   1017 		//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz
   1018 		//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
   1019 		//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
   1020 		//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
   1021 			PWCD =    myDutyCycle;		//12    ~  0.25% duty cycle @ 160Hz
   1022 		
   1023 		PCRUN = 1;		// TURN PWM ON
   1024 
   1025 }//END PWM_B0_ON Function
   1026 //=====================================================================
        ======
   1027 
   1028 
   1029 
   1030 //=====================================================================
        ======
   1031 //	PWM Output on Port B - Pin 0
   1032 //=====================================================================
        ======
   1033 void PinB0_PWM(void){
   1034 
   1035 //Carl's Notes...
   1036 
   1037 //Step 1: Set Pin Direction...
   1038 //Step 2: Set Pin I/O Type...
   1039 //Step 3: Set Pin Purpose...
   1040 //Step 4: Select the Clock Mode...
   1041 //Step 5: Set the Duty Cycle...
   1042 //Step 5: Start the PWM Counter...
   1043 
   1044 	//Direction...	
   1045 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
   1046 
   1047 	//I/O Type...

                                                              Page :         28
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1048 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
   1049 	PB0C0  = 1;		
   1050 
   1051 	//Purpose...
   1052 	PB0MD1  = 0;	// PortB Bit0 set to PWM Output (0,1)...
   1053 	PB0MD0  = 1;	
   1054 
   1055 
   1056 	//Select the Clock Mode...
   1057 	PCCS1 = 0;	//00= LS; 01=HS; 10=PLL
   1058 	PCCS0 = 1;
   1059 
   1060 	//SET THE PERIOD...(Added April 4th, 2013)
   1061 	PWCP = 4250;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5
        kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
   1062 
   1063 	//SET THE DUTY CYCLE...(Added April 15th, 2013)
   1064 
   1065 	//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
   1066 	//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
   1067 	//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz
   1068 	//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
   1069 	//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
   1070 	//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
   1071 	PWCD =    12;		//12    ~  0.25% duty cycle @ 160Hz
   1072 
   1073 	PCRUN = 0;		// OFF to start
   1074 
   1075 }
   1076 //=====================================================================
        ======
   1077 
   1078 
   1079 
   1080 
   1081 
   1082 
   1083 
   1084 
   1085 /**********************************************************************
        *********
   1086 	Routine Name:	NOPms
   1087 	Form:			void NOP1000( unsigned int ms )
   1088 	Parameters:		unsigned int sec = "Number of seconds where the device is
         
   1089 						not doing anything"

                                                              Page :         29
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1090 	Return value:	void
   1091 	Description:	NOP for x seconds. Uses HTB* clock (512kHz) and 
   1092 					timer A+B (max 0xFFFF)*(HTBCLK = 1/16 * HSCLK 
   1093 					= (1/16)*8192kHz = 512kHz, see HTBDR to change if 
   1094 					we need an even smaller increment timer...)
   1095 					1/(512kHz) * 0xFFFF = 127ms
   1096 					
   1097 ***********************************************************************
        *******/
   1098 /* 
   1099 	void NOPms( unsigned int ms )
   1100 	{
   1101 	unsigned int timerThres;
   1102 	unsigned char TimeFlag;
   1103 	unsigned int TempSec;
   1104 	unsigned int timer;
   1105 	unsigned int timertest;
   1106 
   1107 		TempSec = ms;
   1108 		TimeFlag = 0;
   1109 
   1110 		tm_init(TM_CH_NO_AB);
   1111 		tm_setABSource(TM_CS_HTBCLK);
   1112 		tm_setABData(0xffff);
   1113 
   1114 		if(ms < 128){
   1115 			timerThres = 0x1FF * ms;
   1116 			TimeFlag = 0;
   1117 		}
   1118 		if(ms == 128){
   1119 			timerThres = 0xFFFF;
   1120 			TimeFlag = 0;
   1121 		}
   1122 		if(ms > 128){
   1123 			while(TempSec > 128){
   1124 				TempSec -= 128;
   1125 				TimeFlag++;
   1126 			}
   1127 			if(TempSec != 0){
   1128 				timerThres = 0x1FF * TempSec;
   1129 			}
   1130 			else{
   1131 				timerThres = 0xFFFF;
   1132 				TimeFlag--;
   1133 			}
   1134 		}

                                                              Page :         30
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1135 
   1136 	TimerRestart:
   1137 		main_clrWDT();	
   1138 		//tm_restart89();	//using LSCLK, the maximum delay time we have is ~2
         secs
   1139 		tm_startAB();
   1140 		timer = tm_getABCounter();
   1141 		while(timer < timerThres){
   1142 			timer = tm_getABCounter();
   1143 			timertest = timer;
   1144 		}
   1145 		if(TimeFlag !=0){
   1146 			tm_stopAB();
   1147 			TimeFlag--;
   1148 			timerThres = 0xFFFF;
   1149 			goto TimerRestart;
   1150 		}
   1151 	} //End NOPms 
   1152 */
   1153 
   1154 /**********************************************************************
        *********
   1155 	Routine Name:	_funcUartFin
   1156 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1157 	Parameters:		unsigned int size		 : 
   1158 					unsigned char errStat	 : 
   1159 	Return value:	void
   1160 	Description:	UART transmission completion callback function.
   1161 ***********************************************************************
        *******/
   1162 static void _funcUartFin( unsigned int size, unsigned char errStat )
   1163 {
   1164 	uart_continue();						// Function in UART.c: process to continue send 
        & receive...
   1165 	_flgUartFin = (unsigned char)FLG_SET;
   1166 	main_reqNotHalt();						// uncommented 5/2/2013
   1167 }
   1168 
   1169 /**********************************************************************
        *********
   1170 	Routine Name:	_funcI2CFin
   1171 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1172 	Parameters:		unsigned int size		 : 
   1173 					unsigned char errStat	 : 

                                                              Page :         31
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1174 	Return value:	void
   1175 	Description:	UART transmission completion callback function.
   1176 ***********************************************************************
        *******/
   1177 static void _funcI2CFin( unsigned int size, unsigned char errStat )
***** main\main.c(1167) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1167) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1178 {
   1179 	i2c_continue();							// Function in UART.c: process to continue send 
        & receive...
   1180 	_flgI2CFin = (unsigned char)FLG_SET;
   1181 	main_reqNotHalt();						// uncommented 5/2/2013
   1182 }
   1183 
   1184 /**********************************************************************
        *********
   1185 	Routine Name:	_intI2c
   1186 	Form:			static void _intI2c( void )
   1187 	Parameters:		void
   1188 	Return value:	void
   1189 	Description:	I2C handler.
   1190 ***********************************************************************
        *******/
   1191 static void _intI2c( void )
***** main\main.c(1182) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1182) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1192 {
   1193 	(void)i2c_continue();
   1194 	main_reqNotHalt();
***** main\main.c(1193) : Warning : W5027 : Meaningless use of an expression
   1195 }
   1196 
   1197 /**********************************************************************
        *********
   1198 	Routine Name:	_intADC
   1199 	Form:			static void _intADC( void )
   1200 	Parameters:		void
   1201 	Return value:	void
   1202 	Description:	I2C handler.
   1203 ***********************************************************************
        *******/
   1204 static void _intADC( void )

                                                              Page :         32
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1205 {
   1206 	_flgADCFin = 1;
   1207 }
   1208 
   1209 /**********************************************************************
        *********
   1210 	Routine Name:	main_reqNotHalt
   1211 	Form:			void reqNotHalt( void )
   1212 	Parameters:		void
   1213 	Return value:	void
   1214 	Description:	request not halt.
   1215 ***********************************************************************
        *******/
   1216 void main_reqNotHalt( void )
   1217 {
   1218 	_reqNotHalt = (unsigned char)FLG_SET;
   1219 }
   1220 
   1221 /**********************************************************************
        *********
   1222 	Routine Name:	_intUart
   1223 	Form:			static void _intUart( void )
   1224 	Parameters:		void
   1225 	Return value:	void
   1226 	Description:	UART handler.
   1227 ***********************************************************************
        *******/
   1228 static void _intUart( void )
   1229 {
   1230 	uart_continue(); 	//in UART.c: process to continue send and receive...
        
   1231 }
   1232 
   1233 
   1234 //=====================================================================
        ======
   1235 //INTERRUPT SERVICE ROUTINE FOR TBC
   1236 static void TBC_ISR( void ) 
   1237 {
   1238 	//Your Code Here...
   1239 	LED2_pin ^= 1;	// Toggle LED
   1240 	tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of dividing
         frequency of the time base counter
   1241 }
   1242 //=====================================================================
        ======

                                                              Page :         33
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1243 
   1244 //=====================================================================
        ======
   1245 //INTERRUPT SERVICE ROUTINE FOR Timer8/9
   1246 static void TMR89_ISR( void ) 
   1247 {
   1248 	//Your Code Here...
   1249 	LED1_pin ^= 1;
   1250 	tm_init(TM_CH_NO_89);
   1251 	tm_start89();		//Clear & Restart Timer...
   1252 }
   1253 //=====================================================================
        ======
   1254 
   1255 //=====================================================================
        ======
   1256 //INTERRUPT SERVICE ROUTINE FOR TimerA/B
   1257 static void TMRAB_ISR( void ) 
   1258 {
   1259 	//Your Code Here...
   1260 	LED4_pin ^= 1;
   1261 	tm_init(TM_CH_NO_AB);
   1262 	tm_startAB();		//Clear & Restart Timer...
   1263 }
   1264 //=====================================================================
        ======
   1265 
   1266 //=====================================================================
        ======
   1267 //INTERRUPT SERVICE ROUTINE FOR TimerE/F
   1268 static void TMREF_ISR( void ) 
   1269 {
   1270 	//Your Code Here...
   1271 	LED7_pin ^= 1;
   1272 	tm_init(TM_CH_NO_EF);
   1273 	tm_startEF();		//Clear & Restart Timer...
   1274 }
   1275 //=====================================================================
        ======
   1276 
   1277 
   1278 //=====================================================================
        ======
   1279 // ----- ISR for External Interrupt Pin 
   1280 static void ExtInt_ISR( void ) 
   1281 {

                                                              Page :         34
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1282 	//Your Code Here...
   1283 	LED9_pin ^= 1;
   1284 	
   1285 }
   1286 //=====================================================================
        ======
   1287 
   1288 //=====================================================================
        ======
   1289 void NOPx( unsigned int MyCount )
   1290 {
   1291 unsigned int ONCNT = 0;
   1292 unsigned int xxx;
   1293 
   1294 xxx = MyCount;
   1295 
   1296 	while(ONCNT < xxx) {	// NOP for "xxx" Cycles
   1297 		ONCNT++;
   1298 	}
   1299 	ONCNT = 0;			// Reset Counter 
   1300 }
   1301 //=====================================================================
        ======
   1302 
   1303 
   1304 
   1305 
   1306 
   1307 
   1308 
   1309 
   1310 
   1311 
   1312 
   1313 //=====================================================================
        ======
   1314 void SerialLCD_Init_and_Clear(void){
   1315 	/* 	FOR REF ONLY - CMD's used to control Parallax Serial LCD!
   1316 		#define LCD_Display_OFF			(  21U )
   1317 		#define LCD_Display_ON_NoBlink	(  22U )
   1318 		#define LCD_Display_ON 			(  25U )
   1319 		#define LCD_Backlight_ON 		(  17U )
   1320 		#define LCD_Backlight_OFF 		(  18U )
   1321 		#define LCD_HOME 				( 128U )
   1322 		#define LCD_Line2				( 148U ) 
   1323 	*/

                                                              Page :         35
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1324 		int i;
   1325 		unsigned char LCD_CONFIG[3]   = {LCD_Display_ON, LCD_Backlight_ON, LC
        D_HOME}; 
   1326 		unsigned char CLEAR_LCD[32];		//Small Array...for UART Transmission, 
        etc
   1327 
   1328 			
   1329  		//FIRST CONFIGURE THE LCD...
   1330 		uart_startSend(LCD_CONFIG, 3, _funcUartFin); // Send LCD COMMANDS
   1331 		while(_flgUartFin != 1){
   1332 			main_clrWDT(); 
   1333 		}
   1334 
   1335 		//-------------------------------------------------------------
   1336 		//Now, CLEAR THE DISPLAY!
   1337 		for(i = 0; i<32; i++) 
   1338 		{
   1339 			CLEAR_LCD[i] = 0x20;	// 0x20 = "Space" => Clear Array
   1340 		}		
   1341 			//CLEAR Parallax LCD Display!
   1342 			_flgUartFin = 0;
   1343 			uart_stop();
   1344 			uart_startSend(CLEAR_LCD, 32, _funcUartFin);
   1345 			while(_flgUartFin != 1){
   1346 				main_clrWDT(); 
   1347 			}	
   1348 		//-------------------------------------------------------------	
   1349 
   1350 }
   1351 //=====================================================================
        ======
   1352 
   1353 //=====================================================================
        ======
   1354 //Simple function to demonstrate Serial LCD
   1355 void UART_TX_TEST (void)
   1356 {
   1357 		unsigned char LCD_Cmd_HOME  = {LCD_HOME}; 
   1358 
   1359 	// ===== START UART TX TEST... =====
   1360 		unsigned char UARTStartupMessage[26] = {"ML610Q111 UART - TX Demo: "}
        ;
   1361 		
   1362 		//CLEAR Parallax LCD Display!
   1363 		_flgUartFin = 0;
   1364 		uart_stop();

                                                              Page :         36
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1365 		uart_startSend(UARTStartupMessage, 26, _funcUartFin);
   1366 		while(_flgUartFin != 1){
   1367 			main_clrWDT(); 
   1368 		}
   1369 			
   1370 	// ===== END UART TX TEST =====  
   1371 	
   1372 
   1373 			
   1374  		//FIRST CONFIGURE THE LCD...
   1375 		uart_startSend(LCD_HOME, 1, _funcUartFin); // Return Cursor back to H
        OME
***** main\main.c(1375) : Warning : W5002 : 'argument' : different levels of in
        direction
   1376 		while(_flgUartFin != 1){
   1377 			main_clrWDT(); 
   1378 		}
   1379 }
   1380 //=====================================================================
        ======
   1381 
   1382 //=====================================================================
        ======
   1383 void UART_RX_TEST(void){
   1384 
   1385 	unsigned char	MyRx[1];	//Small Array...for UART Receive, etc
   1386 	int i;
   1387  	
   1388 	// CLEAR the Array...
   1389 		for(i = 0; i<1; i++) 
   1390 		{
   1391 			MyRx[i] = 0x20;	// 0x20 = "Space" => Clear Array
   1392 		} 
   1393 	 
   1394 	
   1395 	// ===== START UART RX TEST... =====
   1396 		_flgUartFin = 0;
   1397 		uart_stop();
   1398 		uart_startReceive(MyRx, 1, _funcUartFin);	// RX!
   1399 		while(_flgUartFin != 1){
   1400 			main_clrWDT();	
   1401 			LED5_pin ^= 1;	//waiting for data...
   1402 		}
   1403 		
   1404  		//If data in RX Buffer...echo it out the TX port
   1405 		if(MyRx[0] != 0x20){			

                                                              Page :         37
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1406 			//Echo the Received Data
   1407 			_flgUartFin = 0;
   1408 			uart_stop();
   1409 			uart_startSend(MyRx, 1, _funcUartFin);	// TX!
   1410 			while(_flgUartFin != 1){
   1411 				main_clrWDT(); 
   1412 			}
   1413 		} 
   1414 	// ===== END UART RX TEST =====
   1415 		
   1416 }
   1417 //=====================================================================
        ======
   1418  	
   1419 
   1420 ***** main\main.c(1420) : Warning : W5030 : 'tm_get89Counter': unreferenced sta
        tic function
***** main\main.c(1420) : Warning : W5030 : 'tm_getEFSource': unreferenced stat
        ic function
***** main\main.c(1420) : Warning : W5030 : 'tm_getABSource': unreferenced stat
        ic function
***** main\main.c(1420) : Warning : W5030 : 'tm_get89Source': unreferenced stat
        ic function
***** main\main.c(1420) : Warning : W5030 : 'tm_restartAB': unreferenced static
         function
***** main\main.c(1420) : Warning : W5030 : 'tm_clrABCounter': unreferenced sta
        tic function
***** main\main.c(1420) : Warning : W5030 : 'tm_restartEF': unreferenced static
         function
***** main\main.c(1420) : Warning : W5030 : 'tm_clrEFCounter': unreferenced sta
        tic function
***** main\main.c(1420) : Warning : W5030 : 'tm_getABCounter': unreferenced sta
        tic function
***** main\main.c(1420) : Warning : W5030 : 'tm_getEFCounter': unreferenced sta
        tic function
***** main\main.c(1420) : Warning : W5030 : 'tm_stop89': unreferenced static fu
        nction
***** main\main.c(1420) : Warning : W5030 : 'tm_stopEF': unreferenced static fu
        nction
***** main\main.c(1420) : Warning : W5030 : 'tm_stopAB': unreferenced static fu
        nction
***** main\main.c(1420) : Warning : W5030 : 'tm_setAOneshot': unreferenced stat
        ic function
***** main\main.c(1420) : Warning : W5030 : 'tm_setBOneshot': unreferenced stat
        ic function

                                                              Page :         38
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

***** main\main.c(1420) : Warning : W5030 : 'tm_set9Oneshot': unreferenced stat
        ic function
***** main\main.c(1420) : Warning : W5030 : 'tm_set8Oneshot': unreferenced stat
        ic function
***** main\main.c(1420) : Warning : W5030 : '_funcI2CFin': unreferenced static 
        function
***** main\main.c(1420) : Warning : W5030 : 'tm_clr89Counter': unreferenced sta
        tic function
***** main\main.c(1420) : Warning : W5030 : 'tm_restart89': unreferenced static
         function



Error(s)     :  0
Warning(s)   :  49



                                                              Page :         39
                                                              Date : 07-17-2014
                                                              Time :   17:58:45
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c



                            STACK INFORMATION
                            -----------------

  FUNCTION                         LOCALS    CONTEXT    OTHERS    TOTAL
  --------                         ------    -------    ------    -----
  _main                            0         0          0         0         
  _main_clrWDT                     0         0          0         0         
  _Initialization                  0         2          2         4         
  _SetOSC                          0         0          0         0         
  _analog_comparator               0         0          0         0         
  _PortA_Low                       0         0          0         0         
  _PortB_Low                       0         0          0         0         
  _PortC_Low                       0         0          0         0         
  _PortA_Digital_Inputs            0         0          0         0         
  _PWM_B0_ON                       0         0          0         0         
  _PinB0_PWM                       0         0          0         0         
  __funcUartFin                    0         2          0         2         
  __funcI2CFin                     0         2          0         2         
  __intI2c                         0         2          0         2         
  __intADC                         0         0          0         0         
  _main_reqNotHalt                 0         0          0         0         
  __intUart                        0         0          0         0         
  _TBC_ISR                         0         0          0         0         
  _TMR89_ISR                       0         2          0         2         
  _TMRAB_ISR                       0         2          0         2         
  _TMREF_ISR                       0         2          0         2         
  _ExtInt_ISR                      0         0          0         0         
  _NOPx                            4         4          0         8         
  _SerialLCD_Init_and_Clear        38        6          2         46        
  _UART_TX_TEST                    26        4          2         32        
  _UART_RX_TEST                    2         4          2         8         
