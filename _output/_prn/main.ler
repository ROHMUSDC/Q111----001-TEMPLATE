
                                                              Page :          1
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

      1 //*********************************************************************
        ********
      2 //
      3 // USDC TEMPLATE FIRMWARE for Q111 MCU  
      4 //
      5 // Program:	 LAPIS MCU Development Board Demo Code 
      6 //
      7 // Purpose:	 Demonstration Code for use with LAPIS MCU Development Boar
        d 
      8 //
      9 // This single Example code Demonstrates all the following modules work
        ing: 
     10 //		 1.) MCU Initialization (OSC; PORTS; PERIPHERIALS; WDT; etc.) 
     11 //		 2.) Demo of 2Hz INTERRUPT on TBC
     12 //		 3.) Demo of Timer-overflow INTERRUPTS on TMR 8/9
     13 //		 4.) Demo of Timer-overflow INTERRUPTS on TMR A/B
     14 //		 5.) Demo of Timer-overflow INTERRUPTS on TMR E/F
     15 //		 6.) Demo of Hardware PWM Control 
     16 //		 7.) UART TX Demo 
     17 //		 8.) UART RX Demo
     18 //		 9.) Serial LCD Demo
     19 //		10.) PIR Sensor Motion Detection
     20 //		11.) HALL Sensor Magnetic Field Detection
     21 //		12.) ADC Demo...
     22 //		13.) I2C Master Demo...    
     23 //
     24 // Authors:	 C. Schell, K. Bahar & F. Lee 
     25 //		 	 ROHM Semiconductor USA, LLC
     26 //		 	 US Design Center
     27 //
     28 // Notes: 	
     29 //		1.) RTLU8 RUNTIME LIBRARIES:
     30 //				RTLU8 is a C runtime library for mcu's that use the LAPIS nX-U8 a
        s the CPU core
     31 //				RTLU8 provides a large number of routines that can be used when p
        rogramming 
     32 //				in C. Much effort and time can be saved by using these library ro
        utines.
     33 //				For Example, to use the sprintf library for UART commands, you ne
        ed to add 
     34 //				the "LU8100SW.lib" RT Library. To do this open the LAPIS IDE & se
        lect:
     35 //				'Project -> Options -> Target' from the menu bar.  In the "Genera
        l" Tab, 
     36 //				type in "LU8100SW.lib" to add the RTLU8 runtime library for small
         memory 

                                                              Page :          2
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

     37 //				model containing sprintf and many other routines
     38 //		2.) CHECKING THE PROGRAM SIZE:
     39 //				You can check the program size from the map file generated during
         "Compile" step by the Linker. 
     40 //				Please refer to CCU8 programming guide: (3.1. Map Files and 3.1.4
        . Program and Data size)
     41 //				Results will look something like this:
     42 //					Program and Data Sizes
     43 //					This portion of the map file gives aggregate program and data si
        zes for each segment type.
     44 //						Total size (CODE  ) = 02CE4   (11492)
     45 //						Total size (DATA  ) = 002E7   (743)
     46 //						Total size (BIT   ) = 00000.0 (0.0)
     47 //						Total size (NVDATA) = 00000   (0)
     48 //						Total size (NVBIT ) = 00000.0 (0.0)
     49 //						Total size (TABLE ) = 0828A   (33418)
     50 //
     51 // Started:  April 6th, 2013
     52 // Updated:	 JULY 18th, 2014
     53 //*********************************************************************
        ********
     54 
     55 // ================================ ML610Q111 =========================
        ======== 
     56 //	ML610Q111 MCU PINOUT - TSSOP20 Package
     57 //
     58 // 		Pin 01 of mcu => PC0 / TM9OUT / PWMF0 
     59 // 		Pin 02 of mcu => RESET_N
     60 // 		Pin 03 of mcu => TEST
     61 // 		Pin 04 of mcu => PB0 / CMP1OUT / OUTCLK / PWMC / RXD0 / AIN2 / EXI
        4
     62 // 		Pin 05 of mcu => PB1 / TXD1 / TXD0 / PWMD / AIN3 / EXI5 
     63 // 		Pin 06 of mcu => PB2 / PWME / RXD1 / EXI6 
     64 // 		Pin 07 of mcu => PB3 / TXD1 / SIN / EXI7 
     65 // 		Pin 08 of mcu => PA2 / CMP0OUT / CLKIN / PWME / EXI2 
     66 // 		Pin 09 of mcu => TESTF
     67 // 		Pin 10 of mcu => PC3 / TMFOUT
     68 
     69 // 		Pin 11 of mcu => PC2 / PWMF2 
     70 // 		Pin 12 of mcu => PA1 / EXI1 / AIN1 / CMP1P / PWMD / LSCLK / TMFOUT
        
     71 // 		Pin 13 of mcu => PB4 / CMP0P / SOUT / TXD0 / TXD1
     72 // 		Pin 14 of mcu => PB5 / CMP0M / RXD0 / SCK / SCL / PWMF2
     73 // 		Pin 15 of mcu => PB6 / AIN4 / CLKIN / SDA / PWMF1
     74 // 		Pin 16 of mcu => VSS
     75 // 		Pin 17 of mcu => VDD

                                                              Page :          3
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

     76 // 		Pin 18 of mcu => PB7 / AIN5 / RXD1 / LSCLK / PWMF0 / PWMC
     77 // 		Pin 19 of mcu => PA0 / EXI0 / AIN0 / PWMC / OUTCLK / TM9OUT
     78 // 		Pin 20 of mcu => PC1 / PWMF1
     79 //
     80 //=====================================================================
        ========
     81 
     82 //*********************************************************************
        ********
     83 // Microcontroller's connections on the LAPIS MCU Development Board to 
        the 
     84 //  Plug 'n Play, Raspberry Pi Compatible, Universal Connectors:
     85 //
     86 // Pin-01 => 3.3V Power					Pin-02 => 5.0V Power (VBUS)
     87 // Pin-03 => I2C-SDA  (Q111 I/O B.6)	Pin-04 => no connection
     88 // Pin-05 => I2C-SCL  (Q111 I/O B.5)*	Pin-06 => GROUND
     89 // Pin-07 => no connection*				Pin-08 => UART-TX  (Q111 I/O B.1)
     90 // Pin-09 => no connection				Pin-10 => UART-RX  (Q111 I/O B.0) 
     91 // Pin-11 => GPIO #17 (Q111 I/O A.0)	Pin-12 => GPIO #18 (Q111 I/O B.7)
     92 // Pin-13 => GPIO #21 (Q111 I/O A.1)	Pin-14 => no connection
     93 // Pin-15 => GPIO #22 (Q111 I/O A.2)	Pin-16 => GPIO #23 (Q111 I/O C.2)
     94 // Pin-17 => no connection				Pin-18 => GPIO #24 (Q111 I/O C.3)
     95 // Pin-19 => SPI-MOSI (Q111 I/O B.4)	Pin-20 => no connection
     96 // Pin-21 => SPI-MISO (Q111 I/O B.3)	Pin-22 => GPIO #25 (Q111 I/O B.2)
     97 // Pin-23 => SPI-SCLK (Q111 I/O B.5)*	Pin-24 => SPI-CS0  (Q111 I/O C.0)
        
     98 // Pin-25 => no connection				Pin-26 => SPI-CS1  (Q111 I/O C.1)
     99 // 
    100 //=====================================================================
        ========
    101 //*********************************************************************
        ********
    102 
    103 //*********************************************************************
        ********
    104 // Q111 Microcontroller's I/O Pins at J3 on the LAPIS MCU Development B
        oard 
    105 //
    106 // Pin-01 => A.0				Pin-02 => A.1
    107 // Pin-03 => A.2				Pin-04 => B.0
    108 // Pin-05 => B.1				Pin-06 => B.2
    109 // Pin-07 => B.3				Pin-08 => B.4
    110 // Pin-09 => B.5				Pin-10 => B.6 
    111 // Pin-11 => B.7				Pin-12 => C.0
    112 // Pin-13 => C.1				Pin-14 => C.2
    113 // Pin-15 => C.3				Pin-16 => GROUND

                                                              Page :          4
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    114 //
    115 //=====================================================================
        ========
    116 //*********************************************************************
        ********
    117 
    118 
    119 //***** PREPROCESSOR DIRECTIVES ***************************************
        ********
    120  // INCLUDED FILES...
    121 	#include	<ML610111.H>	// Lapis Micro ML610Q111 on LAPIS MCU Developmen
        t Board
    122 	#include	<stdlib.h>		// General-purpose utilities
    123 	#include	<stdio.h>		// I/O-related processing
    124 	#include 	<common.h>		// Common Definitions
    125 	#include 	<irq.h>			// IRQ Definitions
    126 	#include 	<mcu.h>			// MCU Definition
    127 	#include	<i2c.h>			// I2C Definition
    128 	#include 	<tbc.h>			// Set TBC (Timer Based Clock) API
    129 	#include 	<timer.h>		// Timer Macros & APIs
    130 	#include	<math.h>		// Mathematical functions
    131 	#include 	<uart.h>		// UART Function Prototypes	
    132 	//#include	<float.h>		// Numerical limits for floating-point numbers	
    133 	//#include	<string.h>		// Character string manipulation routines
    134 	//#include	<yvals.h>		// Called for by most Header Files
    135 
    136 	//#include 	<main.h>		// Clear WDT API
    137 	//#include	<ctype.h>		// Character classification and conversion 
    138 	//#include	<errno.h>		// Error identifiers Library
    139 	//#include	<limits.h>		// Numerical limits for integers
    140 	//#include	<muldivu8.h>	// Multiplication and Division accelerator
    141 	//#include	<setjmp.h>		// Global jump (allow jumps to locations outsid
        e the current function) 
    142 	//#include	<signal.h>		// Signal handling functions
    143 	//#include	<stdarg.h>		// Variable numbers of arguments
    144 	//#include	<stddef.h>		// Standard types and macros 
    145 	//#include	<yfuns.h>		//  
    146 	
    147 //*********************************************************************
        ********
    148  // I/O PIN DATA ALIASES...
    149 // Connections for Q111 Universal Socket
    150 	#define RX 			PB0D 
    151 	#define TX 			PB1D
    152  
    153 	#define I2C_SDA 	PB6D 

                                                              Page :          5
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    154 	#define I2C_SCL 	PB5D 
    155 
    156 	#define GPIO_17		PA0D
    157 	#define GPIO_21		PA1D
    158 	#define GPIO_22		PA2D
    159 	#define GPIO_18		PB7D
    160 	#define GPIO_23		PC2D
    161 	#define GPIO_24		PC3D
    162 	#define GPIO_25		PB2D
    163 
    164 	#define SPI_MOSI	PB4D
    165 	#define SPI_MISO	PB3D
    166 	#define SPI_SCL 	PB5D
    167 	#define SPI_CS0		PC0D
    168 	#define SPI_CS1 	PC1D 	
    169 	
    170 	//LED's in DICE PATTERN...
    171 	
    172 	// ====== DICE ======
    173 	//	1	2	3
    174 	//
    175 	//	4	5	6
    176 	//
    177 	//	7	8	9
    178 	// ==================
    179 	#define LED1_pin		PC1D	//2013-04-18 (LaPi Plug 'n Play Board)
    180 	#define LED2_pin		PC3D	//2013-04-18 (LaPi Plug 'n Play Board)
    181 	//#define LED3_pin		PB0D	//2013-04-18 (LaPi Plug 'n Play Board)
    182 	#define LED4_pin		PC0D	//2013-04-18 (LaPi Plug 'n Play Board)
    183 	#define LED5_pin		PC2D	//2013-04-18 (LaPi Plug 'n Play Board)
    184 	#define LED6_pin		PB5D	//2013-04-18 (LaPi Plug 'n Play Board)
    185 	#define LED7_pin		PB2D	//2013-04-18 (LaPi Plug 'n Play Board)
    186 	#define LED8_pin		PB7D	//2013-04-18 (LaPi Plug 'n Play Board)
    187 	#define LED9_pin		PB6D	//2013-04-18 (LaPi Plug 'n Play Board)
    188 	
    189 	//ANALOG INPUTS...
    190 	#define Acc_Temp_sig_pin	PA0D	//2013-04-18 (LaPi Plug 'n Play Board)
    191 	#define Acc_Y_sig_pin		PA1D	//2013-04-18 (LaPi Plug 'n Play Board)
    192 	#define Acc_X_sig_pin		PA2D	//2013-04-18 (LaPi Plug 'n Play Board)
    193 	
    194 	//Misc. Connections...
    195 	#define Hall_sig_pin		PB3D	//2013-04-18 (LaPi Plug 'n Play Board)
    196 	#define PIR_pin				PB4D	//2013-04-18 (LaPi Plug 'n Play Board)
    197 	
    198 	// ===== Commands for Parallax Serial LCD Display =====
    199 	#define LCD_FormFeedClear		(  12U )

                                                              Page :          6
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    200 	#define LCD_CarriageReturn		(  13U )
    201 	#define LCD_Display_OFF			(  21U )
    202 	#define LCD_Display_ON_NoBlink	(  22U )
    203 	#define LCD_Display_ON 			(  25U )
    204 	#define LCD_Backlight_ON 		(  17U )
    205 	#define LCD_Backlight_OFF 		(  18U )
    206 	#define LCD_HOME 				( 128U )
    207 	#define LCD_Line2				( 148U )
    208 	
    209 	// ===== Serial Strings =====
    210 	#define WelcomeString		( "LAPIS Q111 LaPi DEV. DEMO") 
    211 	#define WelcomeString_LEN	( sizeof(WelcomeString) - 1 )
    212 
    213 	#define ClearLCD			( "                                ") 
    214 	#define ClearLCD_LEN		( sizeof(ClearLCD) - 1 )
    215 
    216 	#define DataHeaderString	( "My Sensor Data = \n\r")
    217 	#define DataHeaderString_LEN	( sizeof(DataHeaderString) - 1  )
    218 
    219 	#define AlarmString			( "MOTION DETECTED BY PIR SENSOR!  \n\r" ) 
    220 	#define AlarmString_LEN		( sizeof(AlarmString) - 1 )
    221 
    222 	#define NoAlarmString		( "PIR: NO MOTION  - ALL IS WELL!  \n\r" ) 
    223 	#define NoAlarmString_LEN	( sizeof(NoAlarmString) - 1 )
    224 
    225 	#define MagFieldString		( "MAGNETIC Field  DETECTED BY HALL\n\r" ) 
    226 	#define MagFieldString_LEN	( sizeof(MagFieldString) - 1 )
    227 
    228 	#define NoMagFieldString	( "HALL:NO MAGNETIC Field Detected!\n\r" ) 
    229 	#define NoMagFieldString_LEN	( sizeof(MagFieldString) - 1 )
    230 
    231 	#define OkayString			( "OKAY!\n\r") 
    232 	#define OkayString_LEN		( sizeof(OkayString) - 1 )
    233 
    234 	#define TestString			( "TESTING!") 
    235 	#define TestString_LEN		( sizeof(TestString) - 1 )
    236 
    237 	#define NewLineString		( "\n\r") 
    238 	#define NewLineString_LEN	( sizeof(NewLineString) - 1 )
    239 
    240 	#define FailureString		( "FAILURE!") 
    241 	#define FailureString_LEN	( sizeof(FailureString) - 1 )
    242 
    243 	#define SuccessString		( "SUCCESS!") 
    244 	#define SuccessString_LEN	( sizeof(SuccessString) - 1 )
    245 

                                                              Page :          7
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    246 	#define PartSuccessString		( "PARTIALLY SUCCESSFUL!") 
    247 	#define PartSuccessString_LEN	( sizeof(PartSuccessString) - 1 )
    248 	
    249 
    250 //*********************************************************************
        ********
    251 //=====================================================================
        ======
    252 //   MACROS: 
    253 //=====================================================================
        ======
    254 
    255 // ===== Peripheral setting.=====
    256 	#define HSCLK_KHZ	( 8192u )	// 8MHz = 8000kHz (will be multiplied by 1
        024 to give 8,192,000Hz)
    257 	#define FLG_SET	    ( 0x01u ) 	
    258 
    259 // ===== SET DESIRED UART SETTINGS HERE! (Options in UART.h) ==========
        ======
    260 	#define UART_BAUDRATE		( UART_BR_9600BPS) 	// Data Bits Per Second - T
        ested at rates from 2400bps to 512000bps!
    261 	#define UART_DATA_LENGTH	( UART_LG_8BIT )		// x-Bit Data
    262 	#define UART_PARITY_BIT		( UART_PT_NON )			// Parity
    263 	#define UART_STOP_BIT		( UART_STP_1BIT )		// x Stop-Bits
    264 	#define UART_LOGIC			( UART_NEG_POS )		// Desired Logic
    265 	#define UART_DIRECTION		( UART_DIR_LSB )		// LSB or MSB First 
    266 
    267 	// ===== STRUCTURE for UART Settings =====
    268 		static const tUartSetParam  _uartSetParam = {		// UART Parameters
    269 			UART_BAUDRATE,						// Members of Structure...
    270 			UART_DATA_LENGTH,					// Members of Structure...
    271 			UART_PARITY_BIT,					// Members of Structure...
    272 			UART_STOP_BIT,						// Members of Structure...
    273 			UART_LOGIC,							// Members of Structure...
    274 			UART_DIRECTION						// Members of Structure...
    275 		};
    276 //=====================================================================
        ======
    277 
    278 
    279 
    280 //*********************************************************************
        ********
    281 //=====================================================================
        ======
    282 //Other STRUCTURES: 

                                                              Page :          8
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    283 //=====================================================================
        ======
    284 	//Example Structure Declaration
    285 	typedef struct {
    286 		unsigned char state     : 1;
    287 		unsigned char state_sub : 2;
    288 		unsigned char reserve   : 5;
    289 	} STRUCT_STATE;	 
    290 
    291 //*********************************************************************
        ********
    292 
    293 
    294 //*********************************************************************
        ********
    295 //=====================================================================
        ======
    296 //   FUNCTION PROTOTYPES: 
    297 //	Establishes the name and return type of a function and may specify t
        he 
    298 // 	types, formal parameter names and number of arguments to the functi
        on                                 
    299 //=====================================================================
        ======
    300 	void main_clrWDT( void );				// no return value and no arguments
    301 	void Initialization( void );			// no return value and no arguments
    302 	void SetOSC( void );					// no return value and no arguments
    303 
    304 	static void NOPms(unsigned int ms);		// no return value - Delay in ms 
        as Argument
    305 	void NOPx( unsigned int MyCount );		// no return value - Count in ms a
        s Argument
    306 	void PWM_B0_ON(int myPeriod, int myDutyCycle);		// no return value - P
        eriod & DutyCycle Variables as Arguments
    307 
    308 	void analog_comparator( void );			
    309 	void PortA_Low( void );					// no return value and no arguments
    310 	void PortB_Low( void );					// no return value and no arguments
    311 	void PortC_Low( void );					// no return value and no arguments
    312 	void PortA_Digital_Inputs( void );		// no return value and no argument
        s
    313 	void PinB0_PWM( void ); 				// no return value and no arguments
    314 	void main_reqNotHalt( void );			// no return value and no arguments
    315 
    316 	static void _initPeri( void );
    317 	static void _intWdt( void );

                                                              Page :          9
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    318 	static void _intTimer( void );
    319 
    320 	void _funcUartFin( unsigned int size, unsigned char errStat );
    321 	void _intUart( void );
    322 
    323 	void _funcI2CFin( unsigned int size, unsigned char errStat );
    324 	void checkI2C( void );
    325 	void _intI2c( void );
    326 
    327 	void _intADC( void );
    328 	
    329 	void TBC_ISR( void );			// TBC Interrupt Service Routine...
    330 	void TMR89_ISR( void );			// TIMER 8/9 Interrupt Service Routine...
    331 	void TMRAB_ISR( void );			// TIMER A/B Interrupt Service Routine...
    332 	void TMREF_ISR( void );			// TIMER E/F Interrupt Service Routine...
    333 	void ExtInt_ISR( void );		// External Interrupt Interrupt Service Rout
        ine...
    334 	
    335 	void NOPms( unsigned int ms );	// no return value; "ms" in millisecond
        s as Argument
    336 	
    337 	void SerialLCD_Init_and_Clear (void);	// no return value and no argume
        nts 
    338 
    339 	void UART_TX_TEST (void);				// no return value and no arguments
    340 	void UART_RX_TEST (void);				// no return value and no arguments
    341 	
    342 	void PIR_Detect(void);				// no return value and no arguments
    343 	void HALL_Detect(void);				// no return value and no arguments
    344 	void PIR_ALARM (void);				// no return value and no arguments
    345 	void MAG_ALARM (void);				// no return value and no arguments
    346 
    347 //*********************************************************************
        ********
    348 //GLOBAL VARIABLE DECLARATIONS...
    349 
    350 	//UART, I2C & ADC Variables
    351 	unsigned char	_flgUartFin;
    352 	unsigned char 	_flgI2CFin;
    353 	unsigned char	_flgADCFin;
    354 	unsigned char	_reqNotHalt;
    355 
    356 
    357 /*#####################################################################
        #########*/
    358 /*#                                  APIs                              

                                                              Page :         10
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

                #*/
    359 /*#####################################################################
        #########*/
    360 //*********************************************************************
        ********
    361 //=====================================================================
        ======
    362 //  	Start of MAIN FUNCTION
    363 //=====================================================================
        ======
    364 int main(void) 
    365 {
    366 	//LOCAL VARIABLES
    367 	char char_a;				// -128 to 127
    368 	unsigned char uchar;		// 0-255
    369 	unsigned int uint, delay;	// 0 to 65,535
    370 	long long_a;				// -2,147,483,648 to 2,147,483,647
    371 	float float_a;				// 1.17549435e-38 to 3.40282347e+38
    372 	double double_a;			// 2.2250738585072014e-308 to 1.7976931348623157e+3
        08 
    373 	int i,j,k,x,y;				// -32,768 to 32767
    374 
    375 	Init:
    376 		Initialization();		// Init Micro...(Ports, Timers, OSC, IRQ's, UART, 
        etc...)
    377 		
    378 		SerialLCD_Init_and_Clear();	// Set up Parallax Serial LCD Display...
    379 
    380 		UART_TX_TEST();				// Test UART TX...
    381 		//UART_RX_TEST();			// Uncomment to Test UART RX...(You should use a 
        lop here to better test)
    382 
    383 	Primary_Loop:		
    384 		//PLACE USER CODE HERE...
    385 		//PWM_B0_ON(4000, 125);	//period, Duty Cycle variables
    386 		PIR_Detect();
    387 		
    388 		LED5_pin ^= 1;
    389 		
    390 		main_clrWDT();
    391 
    392 	goto Primary_Loop;
    393 		
    394 
    395 }//end main
    396 

                                                              Page :         11
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    397 //=====================================================================
        ======
    398 //  	End of MAIN FUNCTION
    399 //=====================================================================
        ======
    400 //*********************************************************************
        ********
    401 
    402 
    403 
    404 
    405 //*********************************************************************
        ********
    406 //=====================================================================
        ======
    407 //  	Start of Other Functions...
    408 //=====================================================================
        ======
    409 //*********************************************************************
        ********
    410 
    411 
    412 /**********************************************************************
        *********
    413 	Routine Name:	main_clrWDT
    414 	Form:			void main_clrWDT( void )
    415 	Parameters:		void
    416 	Return value:	void
    417 	Description:	clear WDT.
    418 ***********************************************************************
        *******/
    419 
    420 void main_clrWDT( void )
***** main\main.c(395) : Warning : W5029 : 'y': unreferenced local variable
***** main\main.c(395) : Warning : W5029 : 'x': unreferenced local variable
***** main\main.c(395) : Warning : W5029 : 'k': unreferenced local variable
***** main\main.c(395) : Warning : W5029 : 'j': unreferenced local variable
***** main\main.c(395) : Warning : W5029 : 'i': unreferenced local variable
***** main\main.c(395) : Warning : W5029 : 'double_a': unreferenced local varia
        ble
***** main\main.c(395) : Warning : W5029 : 'float_a': unreferenced local variab
        le
***** main\main.c(395) : Warning : W5029 : 'long_a': unreferenced local variabl
        e
***** main\main.c(395) : Warning : W5029 : 'delay': unreferenced local variable
***** main\main.c(395) : Warning : W5029 : 'uint': unreferenced local variable

                                                              Page :         12
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

***** main\main.c(395) : Warning : W5029 : 'uchar': unreferenced local variable
***** main\main.c(395) : Warning : W5029 : 'char_a': unreferenced local variabl
        e
***** main\main.c(395) : Warning : W6002 : 'Init': unreferenced label
    421 {
    422 	//__DI(); // Disable multi-interrupts
    423 		do {
    424 			WDTCON = 0x5Au;
    425 		} while (WDP != 1);
    426 		WDTCON = 0xA5u;
    427 
    428 	//__EI(); // Re-Enable multi-interrupts
    429 }
    430 
    431 //=====================================================================
        ======
    432 //	Initialize Micro to Desired State...
    433 //=====================================================================
        ======
    434 static void Initialization(void){
    435 
    436 	//Initialize Peripherals	
    437 		//BLKCON2 Control Bits...Manually Set 4/12/2013
    438 			DSIO0 = 1; // 0=> Enables Synchronous Serial Port 0 
    439 			DUA0  = 0; // 0=> Enables the operation of UART0 
    440 			DUA1  = 1; // 0=> Enables Uart1 
    441 			DI2C1 = 1; // 0=> Enables I2C bus Interface (Slave) 
    442 			DI2C0 = 0; // 0=> Enables I2C bus Interface (Master)	
    443 	
    444 		BLKCON4 = 0x00; // SA-ADC: 0=> Enables ; 0xFF=> Disables
    445 		BLKCON6 = 0x00; // Timers 8, 9, A, E, F : 0=> Enables ; 0xFF=> Disabl
        es
    446 		BLKCON7 = 0x00; // PWM (PWMC, PWMD, PWME, PWMF : 0=> Enables ; 0xFF=>
         Disables
    447 
    448 	// Port Initialize...
    449 		PortA_Low();	//Initialize all 3 Ports of Q111 Port A to GPIO-Low
    450 		PortB_Low();	//Initialize all 8 Ports of Q111 Port B to GPIO-Low
    451 		PortC_Low();	//Initialize all 4 Ports of Q111 Port C to GPIO-Low
    452 
    453 			
    454 				
    455 	// ===== Set Oscillator Rate =====
    456      	SetOSC(); 	//8MHz
    457 
    458 	// ===== PWM =========================================================

                                                              Page :         13
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        =======
    459 	//
    460 	//	NOTE: Possible conflict of B.0 with RX pin from UART0
    461 	//	
    462 	//	PinB0_PWM();		// Set up PWM peripheral (Pin on B.0)
    463 	//====================================================================
        =======	
    464 		
    465 	// ===== Comparator =====	
    466 		//analog_comparator();	//Set up anaolg comparator peripheral
    467 
    468 
    469 /* 	// ===== SET SPECIFIC DESIRED PINS AS INPUTS =====
    470 		//Setup PIR Sensor Input on B.4
    471 			//Step 1: Set Pin Direction...
    472 				PB4DIR = 1;			// PortB Bit4 set Direction to INPUT...
    473 			//Step 2: Set Pin I/O Type...
    474 				PB4C1  = 0;			// PortB Bit4 set Type to HIGH-IMPEDANCE INPUT...
    475 				PB4C0  = 0;	
    476 			//Step 3: Set Pin Purpose...
    477 				PB4MD1  = 0;		// PortB Bit4 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    478 				PB4MD0  = 0;
    479 
    480 		//Setup HALL Sensor Input on B.3
    481 			//Step 1: Set Pin Direction...
    482 				PB3DIR = 1;			// PortB Bit3 set Direction to INPUT...
    483 			//Step 2: Set Pin I/O Type...
    484 				PB3C1  = 0;			// PortB Bit3 set Type to HIGH-IMPEDANCE INPUT...
    485 				PB3C0  = 0;	
    486 			//Step 3: Set Pin Purpose...
    487 				PB3MD1  = 0;		// PortB Bit3 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    488 				PB3MD0  = 0;
    489 
    490 		//Setup ACCELEROMETER X-SIGNAL Sensor Input on A.2
    491 			//Step 1: Set Pin Direction...
    492 				PA2DIR = 1;			// PortA Bit2 set Direction to INPUT...
    493 			//Step 2: Set Pin I/O Type...
    494 				PA2C1  = 0;			// PortA Bit2 set Type to HIGH-IMPEDANCE INPUT...
    495 				PA2C0  = 0;	
    496 			//Step 3: Set Pin Purpose...
    497 				PA2MD1  = 0;		// PortA Bit2 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    498 				PA2MD0  = 0;
    499 		

                                                              Page :         14
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    500 		//Setup ACCELEROMETER Y-SIGNAL Sensor Input on A.1
    501 			//Step 1: Set Pin Direction...
    502 				PA1DIR = 1;			// PortA Bit1 set Direction to INPUT...
    503 			//Step 2: Set Pin I/O Type...
    504 				PA1C1  = 0;			// PortA Bit1 set Type to HIGH-IMPEDANCE INPUT...
    505 				PA1C0  = 0;	
    506 			//Step 3: Set Pin Purpose...
    507 				PA1MD1  = 0;		// PortA Bit1 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    508 				PA1MD0  = 0;
    509 
    510 		//Setup ACCELEROMETER Temperature-SIGNAL Sensor Input on A.0
    511 			//Step 1: Set Pin Direction...
    512 				PA0DIR = 1;			// PortA Bit0 set Direction to INPUT...
    513 			//Step 2: Set Pin I/O Type...
    514 				PA0C1  = 0;			// PortA Bit0 set Type to HIGH-IMPEDANCE INPUT...
    515 				PA0C0  = 0;	
    516 			//Step 3: Set Pin Purpose...
    517 				PA0MD1  = 0;		// PortA Bit0 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    518 				PA0MD0  = 0; */
    519 
    520 	//================== STANDBY CONTROL REGISTER=========================
        ==========
    521 	//
    522 	// SBYCON is a 2-bit special function register to control operating mo
        de of MCU
    523 	//		STP   :   HLT
    524 	// 		BIT 1 :  BIT 0
    525 	//  	 0         0     => Program RUN mode (initial value)
    526 	//  	 0         1     => HALT mode
    527 	//  	 1         0     => STOP mode
    528 	//  	 1         1     => (Prohibited)
    529 	// See ML610Q111/ML610Q112 User Manual - Section 4: MCU Control Functi
        on
    530 	//	SBYCON = 0;		// Program RUN mode
    531 	//====================================================================
        ==========
    532 
    533 	//================== VOLTAGE LEVEL SUPERVISOR REGISTER ===============
        ==========
    534 	// 
    535 	// The Q11x mcu's have two channels of VOLTAGE LEVEL SUPERVISORs
    536 	// Accuracy is ±3%
    537 	//
    538 	// The threshold voltages of VLS0 (VDD fall) : 2.85V (Typ. )

                                                              Page :         15
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    539 	//								  (VDD rise) : 2.92V (Typ. )
    540 	//
    541 	// The threshold voltages of VLS1 (VDD fall) : 4 types selectable 3.3V
        / 3.6V/ 3.9V/ 4.2V (Typ.)
    542 	// The VLS0 can be used as the low voltage level detector reset.
    543 	// 
    544 	// See ML610Q111/ML610Q112 User Manual - Section 22: Voltage Level Sup
        ervisor
    545 	//
    546 	//====================================================================
        ==========
    547 
    548    	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
    549 	// INTERRUPT SETUP...
    550 		//	The ML610Q1xx mcu's have 31 hardware interrupt sources 
    551 		//		 7 External Interrupt Sources
    552 		//		24 Internal Interrupt Sources 
    553 		// EXAMPLE: WDT; VLS; EXTERNAL INT Pins (6); SPI; ADC; I2C (Slave); I
        2C (Master);
    554 		//			TIMERS (6); UART; Comparators (2); PWM's ((4); TBC (4)		
    555 	
    556 		irq_di();	// Disable Interrupts
    557 		//irq_init();	// Initialize Interrupts (All Off and NO Requests)
    558 			//==================================================================
        ==
    559 			//FOR NOTES ONLY...This is all taken care of in "irq_init()"
    560 				// INTERRUPT ENABLE REGISTERS...
    561 				//  IE0 = VOLTAGE LEVEL SUPERVISOR Int.
    562 				//  IE1 = EXTERNAL Ints on B3, B2, B1, B0, A2, A1, & A0
    563 				//  IE2 = SPI, A/D, I2C Slave & I2C Master Int.
    564 				//  IE3 = TIMERS 8 & 9 Ints.
    565 				//  IE4 = UART & COMPARATOR Ints.
    566 				//  IE5 = TIMERS A, B, E & F Ints.
    567 				//  IE6 = PWMC, PWMD, PWME, PWMF & 128Hz & 32Hz TBC Ints.
    568 				//  IE7 = 16Hz & 2Hz TBC Ints.
    569 				//IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    570 				//--------------------------------------------------------------
    571 				// INTERRUPT REQUEST FLAG REGISTERS...
    572 				//  IRQ0 = WDT & VLS Int Requests
    573 				//  IRQ1 = EXTERNAL Int Requests
    574 				//  IRQ2 = SPI, A/D, I2C Slave & I2C Master Int Requests
    575 				//  IRQ3 = TIMERS 8 & 9 Int Requests 
    576 				//  IRQ4 = UART & COMPARATOR Int Requests 
    577 				//  IRQ5 = TIMERS A, B, E & F Int Requests 
    578 				//  IRQ6 = PWMC &  128Hz & 32Hz TBC Int Requests 
    579 				//  IRQ7 = 16Hz & 2Hz TBC Int Requests 

                                                              Page :         16
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    580 				//IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    581 			//==================================================================
        ==
    582 
    583 			// INTERRUPT ENABLE REGISTERS...
    584 				IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    585 
    586 
    587 			// INTERRUPT REQUEST REGISTERS...
    588 				IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    589 
    590  			//------------- SET UP UART Interrupts Handler --------------------
        -----------------------
    591 				(void)irq_setHdr( (unsigned char)IRQ_NO_UA0INT, _intUart );
    592 					EUA0 = 1; 	// EUA0 is the enable flag for the UART0 interrupt (1=E
        NABLED)
***** main\main.c(591) : Warning : W5027 : Meaningless use of an expression
    593 					QUA0 = 0;	// Request Flag for the UART_0 	INTERRUPT (1=REQUEST, 0-
        NO-REQUEST)
    594 			//------------------------------------------------------------------
        ----------------------
    595 			
    596  			//------------- SET UP I2C MASTER Interrupts Handler --------------
        -----------------------
    597 				(void)irq_setHdr( (unsigned char)IRQ_NO_I2CMINT, _intI2c );
    598 					EI2CM = 1; // EI2CM is the enable flag for the I2C MASTER interrup
        t (1=ENABLED)
***** main\main.c(597) : Warning : W5027 : Meaningless use of an expression
    599 					QI2CM = 0;
    600 			//------------------------------------------------------------------
        ----------------------
    601 			
    602 			//------------- SET UP ADC Interrupts Handler ----------------------
        ----------------------
    603 				(void)irq_setHdr( (unsigned char)IRQ_NO_SADINT, _intADC );
    604 					ESAD = 1; // ESAD is the enable flag for the ADC interrupt (1=ENAB
        LED)
***** main\main.c(603) : Warning : W5027 : Meaningless use of an expression
    605 					QSAD = 0; // Request Flag for the ADC INTERRUPT (1=REQUEST, 0-NO-R
        EQUEST)
    606 			//------------------------------------------------------------------
        ----------------------
    607 			
    608 			//------------- SET UP  xHz TBC Interrupt (Options: 128Hz, 32Hz, 16H
        z, 2Hz) --------------
    609 				(void)irq_setHdr( (unsigned char)IRQ_NO_T2HINT, TBC_ISR );  //Clear

                                                              Page :         17
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

         interrupt request flag
    610 					E2H = 1;	  // Enable x Hz TBC Interrupt (1=ENABLED)
***** main\main.c(609) : Warning : W5027 : Meaningless use of an expression
    611 					Q2H = 0;	  // Request flag for the TIME BASE COUNTER 2Hz Interrupt
        
    612 			// -----			
    613 			//------------- TBC...Set Ratio: : 1:1 => 1_1 ----------------------
        ----------------------
    614 				(void)tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of
         dividing frequency of the time base counter
    615 			//------------------------------------------------------------------
        ---------------------- 
    616 			
    617  			//------------- SET UP TIMER 8/9 Interrupt to increment timers ever
        y ~X ms ---------------
    618 				(void)irq_setHdr( (unsigned char)IRQ_NO_TM9INT, TMR89_ISR );  //Cle
        ar interrupt request flag
***** main\main.c(614) : Warning : W5027 : Meaningless use of an expression
    619 					ETM8 = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
***** main\main.c(618) : Warning : W5027 : Meaningless use of an expression
    620 					ETM9 = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)
    621 					QTM8 = 0;		// Timer 8 IRQ request flag; 1=REQUEST
    622 					QTM9 = 0;		// Timer 9 IRQ request flag; 1=REQUEST
    623 					T8CS0 = 1;		// 111 => Select PLLCLK
    624 					T8CS1 = 1;
    625 					T8CS2 = 1;
    626 					T9CS0 = 1;		// 111 => Select PLLCLK
    627 					T9CS1 = 1;
    628 					T9CS2 = 1; 
    629 					tm_init(TM_CH_NO_89);
    630 					tm_set89Data(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    631 					tm_set89Source(TM_CS_HTBCLK);
    632 					tm_start89();
    633 					T89M16 = 1;		//1 => sets 16-bit timer mode
    634 				
    635 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    636 					HTD2 = 1;
    637 					HTD1 = 1;
    638 					HTD0 = 1; 
    639 			//------------------------------------------------------------------
        ----------------------
    640 
    641 			
    642  			/* Commented Timer 8/9 Interrupt out, as it is used for NOPms() fun

                                                              Page :         18
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        ction
    643 			//------------- SET UP TIMER A/B Interrupt to increment timers every
         ~X ms ---------------
    644 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMBINT, TMRAB_ISR );  //Cle
        ar interrupt request flag
    645 					ETMA = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
    646 					ETMB = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)
    647 					QTMA = 0;		// timer 8 IRQ request flag; 1=REQUEST
    648 					QTMB = 0;		// timer 9 IRQ request flag; 1=REQUEST
    649 					TACS0 = 1;		// 111 => Select PLLCLK
    650 					TACS1 = 1;
    651 					TACS2 = 1;
    652 					TBCS0 = 1;		// 111 => Select PLLCLK
    653 					TBCS1 = 1;
    654 					TBCS2 = 1; 
    655 					tm_init(TM_CH_NO_AB);
    656 					tm_setABData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    657 					tm_setABSource(TM_CS_HTBCLK);
    658 					tm_startAB();
    659 					TABM16 = 1;		//1 => sets 16-bit timer mode
    660 				
    661 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    662 					HTD2 = 1;
    663 					HTD1 = 1;
    664 					HTD0 = 1; 
    665 			//------------------------------------------------------------------
        ----------------------
    666 			*/
    667 			
    668 			//------------- SET UP TIMER E/F Interrupt to increment timers every
         ~X ms ---------------
    669 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMFINT, TMREF_ISR );  //Cle
        ar interrupt request flag
    670 					ETME = 1;	  	// Enable timer E Interrupt (1=ENABLED
***** main\main.c(669) : Warning : W5027 : Meaningless use of an expression
    671 					ETMF = 1;	  	// Enable timer F Interrupt (1=ENABLED)
    672 					QTME = 0;		// Timer E IRQ request flag; 1=REQUEST
    673 					QTMF = 0;		// Timer F IRQ request flag; 1=REQUEST
    674 					TECS0 = 1;		// 111 => Select PLLCLK
    675 					TECS1 = 1;
    676 					TECS2 = 1;
    677 					TFCS0 = 1;		// 111 => Select PLLCLK
    678 					TFCS1 = 1;
    679 					TFCS2 = 1;

                                                              Page :         19
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    680 					tm_init(TM_CH_NO_EF);
    681 					tm_setEFData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    682 					tm_setEFSource(TM_CS_HTBCLK);
    683 					tm_startEF();
    684 					TEFM16 = 1;		//1 => sets 16-bit timer mode
    685 				
    686 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    687 					HTD2 = 1;
    688 					HTD1 = 1;
    689 					HTD0 = 1; 
    690 			//------------------------------------------------------------------
        ----------------------
    691 			
    692 			//------------- SET UP B.3 as an input, and prepare to use as an ext
        ernal interrupt ------
    693 					PB3DIR = 1;
    694 					PB3C1 = 0;
    695 					PB3C0 = 0;
    696 					PB3MD1 = 0;
    697 					PB3MD0 = 0;
    698 					PB3E1 = 1;
    699 					PB3E0 = 0;		//PBnE0-1 are used to choose the Rising-Edge Mode for 
        this interrupt
    700 					PB3SM = 0;
    701 			// -----
    702 			//------------- SET UP EXTERNAL INTERRUPT on B.3 -------------------
        ----------------------
    703 			//Options include following pins: A.0; A.1; A.2. B.0; B.1; B.2 & B.3
        
    704 			(void)irq_setHdr( (unsigned char)IRQ_NO_PB3INT, ExtInt_ISR );  //Cle
        ar interrupt request flag
    705 					EPB3 = 0;	// 1=> Enables Interrupt
***** main\main.c(704) : Warning : W5027 : Meaningless use of an expression
    706 					QPB3 = 0;	// EXT IRQ request flag; 1=REQUEST	
    707 			//------------------------------------------------------------------
        ----------------------   
    708 	
    709 			
    710 	irq_ei(); // Enable Interrupts
    711 	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII  
    712 
    713 	// ===== SET UP WATCH DOG TIMER ======================================
        =======
    714 		WDTMOD = 0x03; 	// 0x03=overflow 8sec...

                                                              Page :         20
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    715 		main_clrWDT(); 	// Clear WDT   
    716 	//====================================================================
        =======
    717 	
    718 	
    719 	// ===== UART Initialization =========================================
        =======
    720 	//
    721 	//	Pin PB0 of mcu => RX  
    722 	// 	Pin PB1 of mcu => TX 
    723 	// 
    724 		(void)uart_init( (unsigned char)UART_CS_HSCLK,	// Generator       			
        	
    725 				 (unsigned short)HSCLK_KHZ,				// HSCLK frequency 				
    726 				 &_uartSetParam );						// Parameters from Structure    
    727 		uart_PortSet();									// Set UART Port Pins
***** main\main.c(726) : Warning : W5027 : Meaningless use of an expression
    728 		_flgUartFin = 0;
    729 		uart_stop();
    730 
    731 	//	
    732 	//====================================================================
        =======
    733 
    734 	// ===== I2C Initialization ==========================================
        =======
    735 	//	(void)i2c_init(I2C_MOD_FST, (unsigned short)HSCLK_KHZ, I2C_SYN_ON);
        
    736 	//	I20SYN = 1;		//Enable Clock Stretching	
    737 	//====================================================================
        =======
    738 
    739 
    740 
    741 		
    742 		
    743 }//End Initialization
    744 //=====================================================================
        ======
    745 
    746 
    747 //=====================================================================
        ======
    748 //	OSC set
    749 //=====================================================================
        ======

                                                              Page :         21
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    750 static void SetOSC(void){
    751 
    752 	//Frequency Control Register 0 (FCON0) 	
    753 	//	used to control the high-speed clock generation circuit and to sele
        ct system clock.
    754 		SYSC0  = 0;			// Used to select the frequency of the HSCLK => 00=8.19
        2MHz.
    755 		SYSC1  = 0;			//...
    756 		OSCM1  = 1;			// 10 => Built-in PLL oscillation mode
    757 		OSCM0  = 0;			//...
    758 		
    759 	// Frequency Control Register 1 (FCON1)
    760 		ENOSC  = 1;			// 1=Enable High Speed Oscillator...
    761 		SYSCLK = 1;			// Select System Clock: 1=HSCLK; 0=LSCLK 
    762 		LPLL   = 1;			// 1=Enables the use of PLL oscillation - ADDED 4/30/20
        13
    763 
    764 	__EI();					//INT enable
    765 }
    766 //=====================================================================
        ======
    767 
    768 
    769 //=====================================================================
        ======
    770 //	Analog Comparator setup
    771 //=====================================================================
        ======
    772 void analog_comparator(void){
    773 
    774 //Carl's Notes...
    775 
    776 //Step 1: Select the Interrupt Mode
    777 // 	a.) Interrupt Disabled      => CMPxE1 = 0; CMPxE0 = 0;	  
    778 // 	b.) Falling-Edge Int. Mode  => CMPxE1 = 0; CMPxE0 = 1;
    779 // 	c.) Rising-Edge Int. Mode   => CMPxE1 = 1; CMPxE0 = 0;
    780 // 	d.) Both-Edge Int. Mode     => CMPxE1 = 1; CMPxE0 = 1;
    781 
    782 
    783 //Step 2: Enable the Comparator                       => CMPxEN = 1;	
    784 
    785 //Step 3: Wait 3ms to allow Comparator to stabilize
    786 
    787 //Step 4: Read the comparison result			=> CMPxD: 0= +<-; 1= +>-
    788 
    789 //Step 5: Disable the Comparator				=> CMPxEN = 0;	

                                                              Page :         22
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    790 
    791 
    792 
    793    //Comparator 0...
    794 	CMP0EN  = 0x01; 	// Comparator ON...
    795 	CMP0E1  = 0x00; 	// No Interupt...
    796 	CMP0E0  = 0x00;
    797 	CMP0SM1 = 0x00; 	// Detect without Sampling... 
    798 	CMP0RFS = 0x01; 	// Differential Input on B5
    799 
    800    //Comparator 0 OFF
    801 	CMP0EN  = 0x00;
    802 
    803 
    804 }
    805 //=====================================================================
        ======
    806 
    807 
    808 
    809 //=====================================================================
        ======
    810 //	Clear All 3 Bits of Port A
    811 //=====================================================================
        ======
    812 void PortA_Low(void){
    813 
    814 //Carl's Notes...
    815 
    816 //Step 1: Set Pin Direction...
    817 //Step 2: Set Pin I/O Type...
    818 //Step 3: Set Pin Purpose...
    819 //Step 4: Set Pin Data...
    820 
    821 	//Direction...	
    822 	PA0DIR = 0;		// PortA Bit0 set to Output Mode...
    823 	PA1DIR = 0;		// PortA Bit1 set to Output Mode...
    824 	PA2DIR = 0;		// PortA Bit2 set to Output Mode...
    825 
    826 	//I/O Type...
    827 	PA0C1  = 1;		// PortA Bit0 set to CMOS Output...
    828 	PA0C0  = 1;		
    829 	PA1C1  = 1;		// PortA Bit1 set to CMOS Output...
    830 	PA1C0  = 1;	
    831 	PA2C1  = 1;		// PortA Bit2 set to CMOS Output...
    832 	PA2C0  = 1;	

                                                              Page :         23
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    833 
    834 	//Purpose...
    835 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose Output...
    836 	PA0MD0  = 0;	
    837 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose Output...
    838 	PA1MD0  = 0;	
    839 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose Output...
    840 	PA2MD0  = 0;	
    841 
    842 	//Data...
    843 	PA0D = 0;		// A.0 Output OFF....
    844 	PA1D = 0;		// A.1 Output OFF....
    845 	PA2D = 0;		// A.2 Output OFF....
    846 
    847 	main_clrWDT(); 	// Clear WDT
    848 
    849 }
    850 //=====================================================================
        ======
    851 
    852 //=====================================================================
        ======
    853 //	Clear All 8 Bits of Port B
    854 //=====================================================================
        ======
    855 void PortB_Low(void){
    856 
    857 //Carl's Notes...
    858 
    859 //Step 1: Set Pin Direction...
    860 //Step 2: Set Pin I/O Type...
    861 //Step 3: Set Pin Purpose...
    862 //Step 4: Set Pin Data...
    863 
    864 	//Direction...	
    865 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
    866 	PB1DIR = 0;		// PortB Bit1 set to Output Mode...
    867 	PB2DIR = 0;		// PortB Bit2 set to Output Mode...
    868 	PB3DIR = 0;		// PortB Bit3 set to Output Mode...
    869 	PB4DIR = 0;		// PortB Bit4 set to Output Mode...
    870 	PB5DIR = 0;		// PortB Bit5 set to Output Mode...
    871 	PB6DIR = 0;		// PortB Bit6 set to Output Mode...
    872 	PB7DIR = 0;		// PortB Bit7 set to Output Mode...
    873 
    874 	//I/O Type...
    875 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...

                                                              Page :         24
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    876 	PB0C0  = 1;		
    877 	PB1C1  = 1;		// PortB Bit1 set to CMOS Output...
    878 	PB1C0  = 1;	
    879 	PB2C1  = 1;		// PortB Bit2 set to CMOS Output...
    880 	PB2C0  = 1;	
    881 	PB3C1  = 1;		// PortB Bit3 set to CMOS Output...
    882 	PB3C0  = 1;		
    883 	PB4C1  = 1;		// PortB Bit4 set to CMOS Output...
    884 	PB4C0  = 1;	
    885 	PB5C1  = 1;		// PortB Bit5 set to CMOS Output...
    886 	PB5C0  = 1;	
    887 	PB6C1  = 1;		// PortB Bit6 set to CMOS Output...
    888 	PB6C0  = 1;	
    889 	PB7C1  = 1;		// PortB Bit7 set to CMOS Output...
    890 	PB7C0  = 1;	
    891 
    892 	//Purpose...
    893 	PB0MD1  = 0;	// PortB Bit0 set to General Purpose Output...
    894 	PB0MD0  = 0;	
    895 	PB1MD1  = 0;	// PortB Bit1 set to General Purpose Output...
    896 	PB1MD0  = 0;	
    897 	PB2MD1  = 0;	// PortB Bit2 set to General Purpose Output...
    898 	PB2MD0  = 0;	
    899 	PB3MD1  = 0;	// PortB Bit3 set to General Purpose Output...
    900 	PB3MD0  = 0;	
    901 	PB4MD1  = 0;	// PortB Bit4 set to General Purpose Output...
    902 	PB4MD0  = 0;	
    903 	PB5MD1  = 0;	// PortB Bit5 set to General Purpose Output...
    904 	PB5MD0  = 0;
    905 	PB6MD1  = 0;	// PortB Bit6 set to General Purpose Output...
    906 	PB6MD0  = 0;	
    907 	PB7MD1  = 0;	// PortB Bit7 set to General Purpose Output...
    908 	PB7MD0  = 0;
    909 
    910 	//Data...
    911 	PB0D = 0;		// B.0 Output OFF....
    912 	PB1D = 0;		// B.1 Output OFF....
    913 	PB2D = 0;		// B.2 Output OFF....
    914 	PB3D = 0;		// B.3 Output OFF....
    915 	PB4D = 0;		// B.4 Output OFF....
    916 	PB5D = 0;		// B.5 Output OFF....
    917 	PB6D = 0;		// B.6 Output OFF....
    918 	PB7D = 0;		// B.7 Output OFF....
    919 
    920 	main_clrWDT(); 	// Clear WDT
    921 

                                                              Page :         25
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    922 }
    923 //=====================================================================
        ======
    924 
    925 //=====================================================================
        ======
    926 //	Clear All 4 Bits of Port C
    927 //=====================================================================
        ======
    928 void PortC_Low(void){
    929 
    930 //Carl's Notes...
    931 
    932 //Step 1: Set Pin Direction...
    933 //Step 2: Set Pin I/O Type...
    934 //Step 3: Set Pin Purpose...
    935 //Step 4: Set Pin Data...
    936 
    937 	//Direction...	
    938 	PC0DIR = 0;		// PortC Bit0 set to Output Mode...
    939 	PC1DIR = 0;		// PortC Bit1 set to Output Mode...
    940 	PC2DIR = 0;		// PortC Bit2 set to Output Mode...
    941 	PC3DIR = 0;		// PortC Bit3 set to Output Mode...
    942 
    943 
    944 	//I/O Type...
    945 	PC0C1  = 1;		// PortC Bit0 set to CMOS Output...
    946 	PC0C0  = 1;		
    947 	PC1C1  = 1;		// PortC Bit1 set to CMOS Output...
    948 	PC1C0  = 1;	
    949 	PC2C1  = 1;		// PortC Bit2 set to CMOS Output...
    950 	PC2C0  = 1;	
    951 	PC3C1  = 1;		// PortC Bit3 set to CMOS Output...
    952 	PC3C0  = 1;		
    953 
    954 	//Purpose...
    955 	PC0MD1  = 0;	// PortC Bit0 set to General Purpose Output...
    956 	PC0MD0  = 0;	
    957 	PC1MD1  = 0;	// PortC Bit1 set to General Purpose Output...
    958 	PC1MD0  = 0;	
    959 	PC2MD1  = 0;	// PortC Bit2 set to General Purpose Output...
    960 	PC2MD0  = 0;	
    961 	PC3MD1  = 0;	// PortC Bit3 set to General Purpose Output...
    962 	PC3MD0  = 0;	
    963 
    964 	//Data...

                                                              Page :         26
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    965 	PC0D = 0;		// C.0 Output OFF....
    966 	PC1D = 0;		// C.1 Output OFF....
    967 	PC2D = 0;		// C.2 Output OFF....
    968 	PC3D = 0;		// C.3 Output OFF....
    969 
    970 	main_clrWDT(); 	// Clear WDT
    971 
    972 }
    973 //=====================================================================
        ======
    974 
    975 //=====================================================================
        ======
    976 //	Set All 3 Bits of Port A as Digital Input Pins
    977 //=====================================================================
        ======
    978 void PortA_Digital_Inputs(void){
    979 
    980 //Carl's Notes...
    981 
    982 //Step 1: Set Pin Direction...
    983 //Step 2: Set Pin I/O Type...
    984 //Step 3: Set Pin Purpose...
    985 //Step 4: Set Pin Data...
    986 
    987 	//Direction...	
    988 	PA0DIR = 1;		// PortA Bit0 set to Input Mode...
    989 	PA1DIR = 1;		// PortA Bit1 set to Input Mode...
    990 	PA2DIR = 1;		// PortA Bit2 set to Input Mode...
    991 
    992 
    993 	//I/O Type...
    994 	PA0C1  = 1;		// PortA Bit0 set to Input with Pull-Up Resistor...
    995 	PA0C0  = 0;		
    996 	PA1C1  = 1;		// PortA Bit1 set to Input with Pull-Up Resistor...
    997 	PA1C0  = 0;	
    998 	PA2C1  = 1;		// PortA Bit2 set to Input with Pull-Up Resistor...
    999 	PA2C0  = 0;	
   1000 
   1001 	//Purpose...
   1002 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose I/O...
   1003 	PA0MD0  = 0;	
   1004 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose I/O...
   1005 	PA1MD0  = 0;	
   1006 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose I/O...
   1007 	PA2MD0  = 0;	

                                                              Page :         27
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1008 
   1009 	main_clrWDT(); 	// Clear WDT
   1010 
   1011 }
   1012 //=====================================================================
        ======
   1013 
   1014 //=====================================================================
        ======
   1015 //	PWM Output on Port B - Pin 0
   1016 //=====================================================================
        ======
   1017 void PWM_B0_ON(int myPeriod, int myDutyCycle){
   1018 
   1019 		
   1020 		//SET THE PERIOD...
   1021 			PWCP = myPeriod;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 2
        00=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
   1022 
   1023 		//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
   1024 		//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
   1025 		//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz
   1026 		//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
   1027 		//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
   1028 		//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
   1029 			PWCD =    myDutyCycle;		//12    ~  0.25% duty cycle @ 160Hz
   1030 		
   1031 		PCRUN = 1;		// TURN PWM ON
   1032 
   1033 }//END PWM_B0_ON Function
   1034 //=====================================================================
        ======
   1035 
   1036 
   1037 
   1038 //=====================================================================
        ======
   1039 //	PWM Output on Port B - Pin 0
   1040 //=====================================================================
        ======
   1041 void PinB0_PWM(void){
   1042 
   1043 //Carl's Notes...
   1044 
   1045 //Step 1: Set Pin Direction...
   1046 //Step 2: Set Pin I/O Type...

                                                              Page :         28
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1047 //Step 3: Set Pin Purpose...
   1048 //Step 4: Select the Clock Mode...
   1049 //Step 5: Set the Duty Cycle...
   1050 //Step 5: Start the PWM Counter...
   1051 
   1052 	//Direction...	
   1053 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
   1054 
   1055 	//I/O Type...
   1056 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
   1057 	PB0C0  = 1;		
   1058 
   1059 	//Purpose...
   1060 	PB0MD1  = 0;	// PortB Bit0 set to PWM Output (0,1)...
   1061 	PB0MD0  = 1;	
   1062 
   1063 
   1064 	//Select the Clock Mode...
   1065 	PCCS1 = 0;	//00= LS; 01=HS; 10=PLL
   1066 	PCCS0 = 1;
   1067 
   1068 	//SET THE PERIOD...(Added April 4th, 2013)
   1069 	PWCP = 4250;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5
        kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
   1070 
   1071 	//SET THE DUTY CYCLE...(Added April 15th, 2013)
   1072 
   1073 	//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
   1074 	//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
   1075 	//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz
   1076 	//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
   1077 	//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
   1078 	//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
   1079 	PWCD =    12;		//12    ~  0.25% duty cycle @ 160Hz
   1080 
   1081 	PCRUN = 0;		// OFF to start
   1082 
   1083 }
   1084 //=====================================================================
        ======
   1085 
   1086 
   1087 
   1088 
   1089 
   1090 

                                                              Page :         29
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1091 
   1092 
   1093 /**********************************************************************
        *********
   1094 	Routine Name:	NOPms
   1095 	Form:			void NOPms( unsigned int ms )
   1096 	Parameters:		unsigned int sec = "Number of seconds where the device is
         
   1097 						not doing anything"
   1098 	Return value:	void
   1099 	Description:	NOP for x seconds. Uses HTB* clock (512kHz) and 
   1100 					timer A+B (max 0xFFFF)*(HTBCLK = 1/16 * HSCLK 
   1101 					= (1/16)*8192kHz = 512kHz, see HTBDR to change if 
   1102 					we need an even smaller increment timer...)
   1103 					1/(512kHz) * 0xFFFF = 127ms					
   1104 ***********************************************************************
        *******/
   1105 
   1106 void NOPms( unsigned int ms ){ 
   1107 	unsigned int timerThres;
   1108 	unsigned char TimeFlag;
   1109 	unsigned int TempSec;
   1110 	unsigned int timer;
   1111 	unsigned int timertest;
   1112 
   1113 		TempSec = ms;
   1114 		TimeFlag = 0;
   1115 
   1116 		tm_init(TM_CH_NO_AB);
   1117 		tm_setABSource(TM_CS_HTBCLK);
   1118 		tm_setABData(0xffff);
   1119 
   1120 		if(ms < 128){
   1121 			timerThres = 0x1FF * ms;
   1122 			TimeFlag = 0;
   1123 		}
   1124 		if(ms == 128){
   1125 			timerThres = 0xFFFF;
   1126 			TimeFlag = 0;
   1127 		}
   1128 		if(ms > 128){
   1129 			while(TempSec > 128){
   1130 				TempSec -= 128;
   1131 				TimeFlag++;
   1132 			}
   1133 			if(TempSec != 0){

                                                              Page :         30
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1134 				timerThres = 0x1FF * TempSec;
   1135 			}
   1136 			else{
   1137 				timerThres = 0xFFFF;
   1138 				TimeFlag--;
   1139 			}
   1140 		}
   1141 
   1142 	TimerRestart:
   1143 		main_clrWDT();	
   1144 		tm_startAB();	//using LSCLK, the maximum delay time we have is ~2 sec
        s
   1145 		timer = tm_getABCounter();
   1146 		while(timer < timerThres){
   1147 			timer = tm_getABCounter();
   1148 			timertest = timer;
   1149 		}
   1150 		if(TimeFlag !=0){
   1151 			tm_stopAB();
   1152 			TimeFlag--;
   1153 			timerThres = 0xFFFF;
   1154 			goto TimerRestart;
   1155 		}
   1156 } //End NOPms 
   1157 
   1158 
   1159 /**********************************************************************
        *********
   1160 	Routine Name:	_funcUartFin
   1161 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1162 	Parameters:		unsigned int size		 : 
   1163 					unsigned char errStat	 : 
   1164 	Return value:	void
   1165 	Description:	UART transmission completion callback function.
   1166 ***********************************************************************
        *******/
   1167 static void _funcUartFin( unsigned int size, unsigned char errStat )
   1168 {
   1169 	uart_continue();						// Function in UART.c: process to continue send 
        & receive...
   1170 	_flgUartFin = (unsigned char)FLG_SET;
   1171 	main_reqNotHalt();						// uncommented 5/2/2013
   1172 }
   1173 
   1174 /**********************************************************************

                                                              Page :         31
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        *********
   1175 	Routine Name:	_funcI2CFin
   1176 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1177 	Parameters:		unsigned int size		 : 
   1178 					unsigned char errStat	 : 
   1179 	Return value:	void
   1180 	Description:	UART transmission completion callback function.
   1181 ***********************************************************************
        *******/
   1182 static void _funcI2CFin( unsigned int size, unsigned char errStat )
***** main\main.c(1172) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1172) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1183 {
   1184 	i2c_continue();							// Function in UART.c: process to continue send 
        & receive...
   1185 	_flgI2CFin = (unsigned char)FLG_SET;
   1186 	main_reqNotHalt();						// uncommented 5/2/2013
   1187 }
   1188 
   1189 /**********************************************************************
        *********
   1190 	Routine Name:	_intI2c
   1191 	Form:			static void _intI2c( void )
   1192 	Parameters:		void
   1193 	Return value:	void
   1194 	Description:	I2C handler.
   1195 ***********************************************************************
        *******/
   1196 static void _intI2c( void )
***** main\main.c(1187) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1187) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1197 {
   1198 	(void)i2c_continue();
   1199 	main_reqNotHalt();
***** main\main.c(1198) : Warning : W5027 : Meaningless use of an expression
   1200 }
   1201 
   1202 /**********************************************************************
        *********
   1203 	Routine Name:	_intADC
   1204 	Form:			static void _intADC( void )

                                                              Page :         32
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1205 	Parameters:		void
   1206 	Return value:	void
   1207 	Description:	I2C handler.
   1208 ***********************************************************************
        *******/
   1209 static void _intADC( void )
   1210 {
   1211 	_flgADCFin = 1;
   1212 }
   1213 
   1214 /**********************************************************************
        *********
   1215 	Routine Name:	main_reqNotHalt
   1216 	Form:			void reqNotHalt( void )
   1217 	Parameters:		void
   1218 	Return value:	void
   1219 	Description:	request not halt.
   1220 ***********************************************************************
        *******/
   1221 void main_reqNotHalt( void )
   1222 {
   1223 	_reqNotHalt = (unsigned char)FLG_SET;
   1224 }
   1225 
   1226 /**********************************************************************
        *********
   1227 	Routine Name:	_intUart
   1228 	Form:			static void _intUart( void )
   1229 	Parameters:		void
   1230 	Return value:	void
   1231 	Description:	UART handler.
   1232 ***********************************************************************
        *******/
   1233 static void _intUart( void )
   1234 {
   1235 	uart_continue(); 	//in UART.c: process to continue send and receive...
        
   1236 }
   1237 
   1238 
   1239 //=====================================================================
        ======
   1240 //INTERRUPT SERVICE ROUTINE FOR TBC
   1241 static void TBC_ISR( void ) 
   1242 {
   1243 	//Your Code Here...

                                                              Page :         33
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1244 	LED2_pin ^= 1;	// Toggle LED
   1245 	tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of dividing
         frequency of the time base counter
   1246 }
   1247 //=====================================================================
        ======
   1248 
   1249 //=====================================================================
        ======
   1250 //INTERRUPT SERVICE ROUTINE FOR Timer8/9
   1251 static void TMR89_ISR( void ) 
   1252 {
   1253 	//Your Code Here...
   1254 	LED1_pin ^= 1;
   1255 	tm_init(TM_CH_NO_89);
   1256 	tm_start89();		//Clear & Restart Timer...
   1257 }
   1258 //=====================================================================
        ======
   1259 
   1260 //=====================================================================
        ======
   1261 //INTERRUPT SERVICE ROUTINE FOR TimerA/B
   1262 static void TMRAB_ISR( void ) 
   1263 {
   1264 	//Your Code Here...
   1265 	LED4_pin ^= 1;
   1266 	tm_init(TM_CH_NO_AB);
   1267 	tm_startAB();		//Clear & Restart Timer...
   1268 }
   1269 //=====================================================================
        ======
   1270 
   1271 //=====================================================================
        ======
   1272 //INTERRUPT SERVICE ROUTINE FOR TimerE/F
   1273 static void TMREF_ISR( void ) 
   1274 {
   1275 	//Your Code Here...
   1276 	LED7_pin ^= 1;
   1277 	tm_init(TM_CH_NO_EF);
   1278 	tm_startEF();		//Clear & Restart Timer...
   1279 }
   1280 //=====================================================================
        ======
   1281 

                                                              Page :         34
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1282 
   1283 //=====================================================================
        ======
   1284 // ----- ISR for External Interrupt Pin 
   1285 static void ExtInt_ISR( void ) 
   1286 {
   1287 	//Your Code Here...
   1288 	LED9_pin ^= 1;
   1289 	
   1290 }
   1291 //=====================================================================
        ======
   1292 
   1293 //=====================================================================
        ======
   1294 void NOPx( unsigned int MyCount )
   1295 {
   1296 unsigned int ONCNT = 0;
   1297 unsigned int xxx;
   1298 
   1299 xxx = MyCount;
   1300 
   1301 	while(ONCNT < xxx) {	// NOP for "xxx" Cycles
   1302 		ONCNT++;
   1303 	}
   1304 	ONCNT = 0;			// Reset Counter 
   1305 }
   1306 //=====================================================================
        ======
   1307 
   1308 
   1309 
   1310 
   1311 
   1312 
   1313 
   1314 
   1315 
   1316 
   1317 
   1318 //=====================================================================
        ======
   1319 void SerialLCD_Init_and_Clear(void){
   1320 	/* 	FOR REF ONLY - CMD's used to control Parallax Serial LCD!
   1321 		#define LCD_Display_OFF			(  21U )
   1322 		#define LCD_Display_ON_NoBlink	(  22U )

                                                              Page :         35
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1323 		#define LCD_Display_ON 			(  25U )
   1324 		#define LCD_Backlight_ON 		(  17U )
   1325 		#define LCD_Backlight_OFF 		(  18U )
   1326 		#define LCD_HOME 				( 128U )
   1327 		#define LCD_Line2				( 148U ) 
   1328 	*/
   1329 		int i;
   1330 		unsigned char LCD_CONFIG[3]   = {LCD_Display_ON, LCD_Backlight_ON, LC
        D_HOME}; 
   1331 		unsigned char CLEAR_LCD[32];		//Small Array...for UART Transmission, 
        etc
   1332 
   1333 			
   1334  		//FIRST CONFIGURE THE LCD...
   1335 		uart_startSend(LCD_CONFIG, 3, _funcUartFin); // Send LCD COMMANDS
   1336 		while(_flgUartFin != 1){
   1337 			main_clrWDT(); 
   1338 		}
   1339 
   1340 		//-------------------------------------------------------------
   1341 		//Now, CLEAR THE DISPLAY!
   1342 		for(i = 0; i<32; i++) 
   1343 		{
   1344 			CLEAR_LCD[i] = 0x20;	// 0x20 = "Space" => Clear Array
   1345 		}		
   1346 			//CLEAR Parallax LCD Display!
   1347 			_flgUartFin = 0;
   1348 			uart_stop();
   1349 			uart_startSend(CLEAR_LCD, 32, _funcUartFin);
   1350 			while(_flgUartFin != 1){
   1351 				main_clrWDT(); 
   1352 			}	
   1353 		//-------------------------------------------------------------	
   1354 
   1355 }
   1356 //=====================================================================
        ======
   1357 
   1358 //=====================================================================
        ======
   1359 //Simple function to demonstrate Serial LCD
   1360 void UART_TX_TEST (void)
   1361 {
   1362 		unsigned char LCD_Cmd_HOME  = {LCD_HOME}; 
   1363 
   1364 	// ===== START UART TX TEST... =====

                                                              Page :         36
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1365 		unsigned char UARTStartupMessage[26] = {"ML610Q111 UART - TX Demo: "}
        ;
   1366 		
   1367 		//CLEAR Parallax LCD Display!
   1368 		_flgUartFin = 0;
   1369 		uart_stop();
   1370 		uart_startSend(UARTStartupMessage, 26, _funcUartFin);
   1371 		while(_flgUartFin != 1){
   1372 			main_clrWDT(); 
   1373 		}
   1374 			
   1375 	// ===== END UART TX TEST =====  
   1376 	
   1377 			
   1378  		//Re-CONFIGURE THE LCD...
   1379 		uart_startSend(LCD_HOME, 1, _funcUartFin); // Return Cursor back to H
        OME
***** main\main.c(1379) : Warning : W5002 : 'argument' : different levels of in
        direction
   1380 		while(_flgUartFin != 1){
   1381 			main_clrWDT(); 
   1382 		}
   1383 }
   1384 //=====================================================================
        ======
   1385 
   1386 //=====================================================================
        ======
   1387 void UART_RX_TEST(void){
   1388 
   1389 	unsigned char	MyRx[1];	//Small Array...for UART Receive, etc
   1390 	int i;
   1391  	
   1392 	// CLEAR the Array...
   1393 		for(i = 0; i<1; i++) 
   1394 		{
   1395 			MyRx[i] = 0x20;	// 0x20 = "Space" => Clear Array
   1396 		} 
   1397 	 
   1398 	
   1399 	// ===== START UART RX TEST... =====
   1400 		_flgUartFin = 0;
   1401 		uart_stop();
   1402 		uart_startReceive(MyRx, 1, _funcUartFin);	// RX!
   1403 		while(_flgUartFin != 1){
   1404 			main_clrWDT();	

                                                              Page :         37
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1405 			LED5_pin ^= 1;	//waiting for data...
   1406 		}
   1407 		
   1408  		//If data in RX Buffer...echo it out the TX port
   1409 		if(MyRx[0] != 0x20){			
   1410 			//Echo the Received Data
   1411 			_flgUartFin = 0;
   1412 			uart_stop();
   1413 			uart_startSend(MyRx, 1, _funcUartFin);	// TX!
   1414 			while(_flgUartFin != 1){
   1415 				main_clrWDT(); 
   1416 			}
   1417 		} 
   1418 	// ===== END UART RX TEST =====
   1419 		
   1420 }
   1421 //=====================================================================
        ======
   1422 
   1423 //=====================================================================
        ======
   1424 void PIR_Detect(void)
   1425 {
   1426 unsigned int x;	// 0 to 65,535
   1427 // Passive InfraRed Sensor Detection...
   1428 // Q111 MICRO CONNECTIONS FOR (LaPi Plug 'n Play Board)
   1429 
   1430 	//PIR_pin => PB4D	
   1431 	//Setup PIR Sensor Input on B.4
   1432 		//Step 1: Set Pin Direction...
   1433 			PB4DIR = 1;			// PortB Bit4 set Direction to INPUT...
   1434 		//Step 2: Set Pin I/O Type...
   1435 			PB4C1  = 0;			// PortB Bit4 set Type to HIGH-IMPEDANCE INPUT...
   1436 			PB4C0  = 0;	
   1437 		//Step 3: Set Pin Purpose...
   1438 			PB4MD1  = 0;		// PortB Bit4 set Purpose to GENERAL PURPOSE Input/Out
        put...
   1439 			PB4MD0  = 0;
   1440 
   1441 	if (PIR_pin == 1)
   1442 	{
   1443 
   1444 		PIR_ALARM();	// PIR DETECTION EVENT!
   1445 		LED8_pin ^= 1;	// Toggle LED
   1446 		NOPms(1000);
   1447 

                                                              Page :         38
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1448 	}//endif
   1449 	else if (PIR_pin == 0)
   1450 	{
   1451 	
   1452 		//Add code here for PIR event NOT DETECTED!
   1453 		
   1454 	}
   1455 
   1456 }
   1457 //=====================================================================
        ======
   1458 
   1459 //=====================================================================
        ======
   1460 void HALL_Detect(void)
***** main\main.c(1456) : Warning : W5029 : 'x': unreferenced local variable
   1461 {
   1462 unsigned int x;	// 0 to 65,535
   1463 // HALL Sensor Detection...
   1464 // Q111 MICRO CONNECTIONS FOR (LaPi Plug 'n Play Board)
   1465 
   1466 	//Hall_sig_pin =>	PB3D	
   1467 	//Setup HALL Sensor Input on B.3
   1468 		//Step 1: Set Pin Direction...
   1469 			PB3DIR = 1;			// PortB Bit3 set Direction to INPUT...
   1470 		//Step 2: Set Pin I/O Type...
   1471 			PB3C1  = 0;			// PortB Bit3 set Type to HIGH-IMPEDANCE INPUT...
   1472 			PB3C0  = 0;	
   1473 		//Step 3: Set Pin Purpose...
   1474 			PB3MD1  = 0;		// PortB Bit3 set Purpose to GENERAL PURPOSE Input/Out
        put...
   1475 			PB3MD0  = 0;
   1476 
   1477 	if (Hall_sig_pin == 0) 		//Low means B-field present...
   1478 	{
   1479 	
   1480 		//Add code here for MAG FIELD DETECTION EVENT!
   1481 			
   1482 	}//endif
   1483 	else if (Hall_sig_pin == 1)	//High means no B-field present...
   1484 	{
   1485 	
   1486 		//Add code here for MAG FIELD NOT DETECTED!
   1487 		
   1488 	}
   1489 

                                                              Page :         39
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1490 }
   1491 //=====================================================================
        ======
   1492  	
   1493 //=====================================================================
        ======
   1494 void PIR_ALARM (void) {
***** main\main.c(1490) : Warning : W5029 : 'x': unreferenced local variable
   1495 
   1496 	//unsigned char LCD_Cmd_HOME  = {LCD_HOME}; 
   1497 	//unsigned char LCD_Cmd_FF  = {LCD_FormFeedClear};	//The cursor is mov
        ed to position 0 on line 0 and the entire display is cleared 
   1498 
   1499 	unsigned char PIR_ALARM_Message[16] = {"PIR EVENT ALARM!"};
   1500 
   1501 
   1502  	//SerialLCD_Init_and_Clear();		// Set up Parallax Serial LCD Display.
        ..	
   1503 		//CLEAR Parallax LCD Display!
   1504 		uart_startSend(LCD_FormFeedClear, 1, _funcUartFin); // Return Cursor 
        back to HOME
***** main\main.c(1504) : Warning : W5002 : 'argument' : different levels of in
        direction
   1505 		while(_flgUartFin != 1){
   1506 			main_clrWDT(); 
   1507 		} 
   1508 		
   1509 		NOPms(250);
   1510 	
   1511 
   1512 /*  	//Re-CONFIGURE THE LCD...
   1513 	uart_startSend(LCD_Cmd_HOME, 1, _funcUartFin); // Return Cursor back t
        o HOME
   1514 	while(_flgUartFin != 1){
   1515 		main_clrWDT(); 
   1516 	}  */
   1517 		
   1518 	// ===== START ALARM EVENT UART TX... =====
   1519 		
   1520 		//CLEAR Parallax LCD Display!
   1521 		_flgUartFin = 0;
   1522 		uart_stop();
   1523 		uart_startSend(PIR_ALARM_Message, 16, _funcUartFin);
   1524 		while(_flgUartFin != 1){
   1525 			main_clrWDT(); 
   1526 		}

                                                              Page :         40
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1527 			
   1528 	// ===== END ALARM EVENT UART TX =====  
   1529 	
   1530 
   1531 }
   1532 //=====================================================================
        ======
   1533 
   1534 ***** main\main.c(1534) : Warning : W5030 : 'tm_get89Counter': unreferenced sta
        tic function
***** main\main.c(1534) : Warning : W5030 : 'tm_getEFSource': unreferenced stat
        ic function
***** main\main.c(1534) : Warning : W5030 : 'tm_getABSource': unreferenced stat
        ic function
***** main\main.c(1534) : Warning : W5030 : 'tm_get89Source': unreferenced stat
        ic function
***** main\main.c(1534) : Warning : W5030 : 'tm_restartAB': unreferenced static
         function
***** main\main.c(1534) : Warning : W5030 : 'tm_clrABCounter': unreferenced sta
        tic function
***** main\main.c(1534) : Warning : W5030 : 'tm_restartEF': unreferenced static
         function
***** main\main.c(1534) : Warning : W5030 : 'tm_clrEFCounter': unreferenced sta
        tic function
***** main\main.c(1534) : Warning : W5030 : 'tm_getEFCounter': unreferenced sta
        tic function
***** main\main.c(1534) : Warning : W5030 : 'TMRAB_ISR': unreferenced static fu
        nction
***** main\main.c(1534) : Warning : W5030 : 'tm_stop89': unreferenced static fu
        nction
***** main\main.c(1534) : Warning : W5030 : 'tm_stopEF': unreferenced static fu
        nction
***** main\main.c(1534) : Warning : W5030 : 'tm_setAOneshot': unreferenced stat
        ic function
***** main\main.c(1534) : Warning : W5030 : 'tm_setBOneshot': unreferenced stat
        ic function
***** main\main.c(1534) : Warning : W5030 : 'tm_set9Oneshot': unreferenced stat
        ic function
***** main\main.c(1534) : Warning : W5030 : 'tm_set8Oneshot': unreferenced stat
        ic function
***** main\main.c(1534) : Warning : W5030 : '_funcI2CFin': unreferenced static 
        function
***** main\main.c(1534) : Warning : W5030 : 'tm_clr89Counter': unreferenced sta
        tic function
***** main\main.c(1534) : Warning : W5030 : 'tm_restart89': unreferenced static

                                                              Page :         41
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

         function



Error(s)     :  0
Warning(s)   :  50



                                                              Page :         42
                                                              Date : 07-18-2014
                                                              Time :   18:27:32
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c



                            STACK INFORMATION
                            -----------------

  FUNCTION                         LOCALS    CONTEXT    OTHERS    TOTAL
  --------                         ------    -------    ------    -----
  _main                            0         0          0         0         
  _main_clrWDT                     0         0          0         0         
  _Initialization                  0         2          2         4         
  _SetOSC                          0         0          0         0         
  _analog_comparator               0         0          0         0         
  _PortA_Low                       0         0          0         0         
  _PortB_Low                       0         0          0         0         
  _PortC_Low                       0         0          0         0         
  _PortA_Digital_Inputs            0         0          0         0         
  _PWM_B0_ON                       0         0          0         0         
  _PinB0_PWM                       0         0          0         0         
  _NOPms                           8         6          0         14        
  __funcUartFin                    0         2          0         2         
  __funcI2CFin                     0         2          0         2         
  __intI2c                         0         2          0         2         
  __intADC                         0         0          0         0         
  _main_reqNotHalt                 0         0          0         0         
  __intUart                        0         0          0         0         
  _TBC_ISR                         0         0          0         0         
  _TMR89_ISR                       0         2          0         2         
  _TMRAB_ISR                       0         2          0         2         
  _TMREF_ISR                       0         2          0         2         
  _ExtInt_ISR                      0         0          0         0         
  _NOPx                            4         4          0         8         
  _SerialLCD_Init_and_Clear        38        6          2         46        
  _UART_TX_TEST                    26        4          2         32        
  _UART_RX_TEST                    2         4          2         8         
  _PIR_Detect                      0         2          0         2         
  _HALL_Detect                     0         0          0         0         
  _PIR_ALARM                       16        4          2         22        
